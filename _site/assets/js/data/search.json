[
  
  {
    "title": "胆敢恶意攻击专家，活该被禁言",
    "url": "/posts/%E8%83%86%E6%95%A2%E6%81%B6%E6%84%8F%E6%94%BB%E5%87%BB%E4%B8%93%E5%AE%B6-%E6%B4%BB%E8%AF%A5%E8%A2%AB%E7%A6%81%E8%A8%80/",
    "categories": "互联网呓语",
    "tags": "aigc, chatgpt",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "大家好，我是专家，老章老章建议：取消89平小三房，大家最好都住大平层、住别墅！昨天的文章刚发出去，顺便推了一下朋友圈，就有朋友私聊发来一张截图并告诫说：老章，你可悠着点吧微博管理员说的真好：真理越辩越明老章顶多有点小情绪，没有上升到恶语相向、人身攻击，至于引战对立，嗯，也没有。不过这事真的给我提了个醒，之前各种看不惯，阴阳怪气，被删了很多文章。以后要更加小心谨慎，突然想起和稀泥专家胡锡进的套...",
    "content": "大家好，我是专家，老章老章建议：取消89平小三房，大家最好都住大平层、住别墅！昨天的文章刚发出去，顺便推了一下朋友圈，就有朋友私聊发来一张截图并告诫说：老章，你可悠着点吧微博管理员说的真好：真理越辩越明老章顶多有点小情绪，没有上升到恶语相向、人身攻击，至于引战对立，嗯，也没有。不过这事真的给我提了个醒，之前各种看不惯，阴阳怪气，被删了很多文章。以后要更加小心谨慎，突然想起和稀泥专家胡锡进的套路挺不错。有网友总结，老胡的核心就是发表不痛不痒的观点，不涉及各方深层次、根本的原因，浅尝辄止，貌似谁也不得罪而受各方待见。这简直是我学习的榜样啊，无奈人家当了这么多年的环球时报主编，是资深媒体人。其套路和文字功底我30年也赶不上。好就好在老章主页是玩机器学习的，倒腾各种AI应用还是可以的。最近爆火的ChatGPT可不就是说车轱辘话的高手吗？而且非常政治正确，从不得罪任何一方。感觉打开新世界大门了，以后老章也可以借用AI之后复制胡锡进的传奇！首先我们再重新认识一下专家的建议这些被评为：但凡能接点地气儿，也不至于一点地气儿都不接的言论，AI会怎么说呢。诸位请看：首先，我们要明白，专家是有可能犯错误的。他们也有可能会偏执、偏激或者存在偏见。所以，即使他们在某一领域有很高的专业水平，也不意味着他们的意见就一定是正确的。其次，我们还要考虑专家的动机。有时候，专家会提出不合理或者不可行的建议，是因为他们希望引起关注、获得更多的关注度或者是为了获得某种利益。在这种情况下，专家的建议往往是不靠谱的，因为他们的动机并不是为了解决问题，而是为了达成某种目的。再者，我们也要注意专家的偏见。有时候，专家会因为自己的偏见、偏好或者信仰而提出不合理的建议。例如，某些科学家可能会因为过于看重某种理论或者做法而忽略了其他可能更有效的选择。在这种情况下，专家的建议往往是不公平的，因为他们只考虑了自己偏见所在的那一部分，而忽略了其他更多的因素。最后，我们还要注意专家的自身局限性。即使是最优秀的专家，也有可能因为自身的局限性而忽略了某些重要的因素，或者是因为缺乏相应的经验、能力而无法真正理解问题的实质。在这种情况下，专家的建议也是不可靠的。总之，我们应该对专家的建议持保留态度，并不断思考、讨论、挑战。只有通过不断的思考和讨论，我们才能真正找出最优的解决方案，解决问题。还有一个事件：【湖南邵阳县：春节将至，倡导大家在疫情高流行期非必要不返乡】“邵阳县发布”微信公众号1月5日消息，邵阳县新冠感染疫情防控指挥部发布温馨提示，其中提到：  春节将至，倡导大家在疫情高流行期非必要不返乡，避免跨地区探亲、旅游，尽量减少出行。返乡人员要做好个人健康监测，减少聚集性活动。非必要不聚集，非必要不聚会。严控庙会、大型文艺演出、展销等活动，简化红白喜事活动，减少农村集市规模和频次，尽量不举办、不参加大规模聚集性活动，减少亲朋聚餐聚会人数，缩短聚餐时间。AI 对此评论是：新冠肺炎疫情是一场全球性的危机，政府为了保障公众的健康和安全，可能会推出一些特殊措施，例如呼吁外出务工人员最好不要回乡过年。这样的措施并不是没有道理的，它的目的是防止疫情的传播。但是，我们也要认识到，这样的措施可能会给外出务工人员带来很大的心理压力。回家过年是中国传统节日的一个重要组成部分，对于很多人来说，回家过年是每一年最重要的目标。如果不能回家过年，那么这样的措施可能会让人感到非常难过。总之，新冠肺炎疫情是一场严峻的挑战，我们都需要共同努力，才能度过这一危机。作为公民，我们应该遵守政府的合理要求，保护自己和他人的健康安全。同时，政府也应该考虑到不同人群的心理和实际需要，并采取适当的措施帮助他们度过艰难的时期。老章以后的文章必然严丝合缝，不会犯一丁点错误，要和违规处理永远说拜拜了。现在，我终于理解了老胡，然后我也成为了老胡。"
  },
  
  {
    "title": "用Python制作高逼格数学动画manim",
    "url": "/posts/%E7%94%A8Python%E5%88%B6%E4%BD%9C%E9%AB%98%E9%80%BC%E6%A0%BC%E6%95%B0%E5%AD%A6%E5%8A%A8%E7%94%BBmanim/",
    "categories": "Python",
    "tags": "python, manim",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "简介manim是斯坦福大学数学系小哥Grant Sanderson开源的数学仿真模拟python库，并用于YouTube 频道3Blue1Brown，来解说高等数学。manim是一个非常优秀的数学动画制作引擎，先来两个GIF感受一下 manim 的魅力：很多同学应该在 B 站看过3b1b的视频，最经典的就是线性代数的本质系列。版本说明manim 初学者可能会有些许困惑，网上的代码、文档、教程...",
    "content": "简介manim是斯坦福大学数学系小哥Grant Sanderson开源的数学仿真模拟python库，并用于YouTube 频道3Blue1Brown，来解说高等数学。manim是一个非常优秀的数学动画制作引擎，先来两个GIF感受一下 manim 的魅力：很多同学应该在 B 站看过3b1b的视频，最经典的就是线性代数的本质系列。版本说明manim 初学者可能会有些许困惑，网上的代码、文档、教程等差异太大，不知道该跟着那个学习。目前manim有三个版本：3b1b 旧版：3blue1brown 自己维护的版本，使用 Cairo 作为后端。3b1b 新版：3blue1brown 自己维护的版本，使用 OpenGL 和 moderngl 来进行 GPU 渲染，优点是速度快。manim 社区版：manim 旧版的衍生，更新更活跃，有很好的文档和社区支持。我比较信任Grant Sanderson 大神，所以直接学习了新版。manimgl 环境搭建manimgl 这个版本的安装特别简单1、安装配置FFmpeg和LaTexhttps://ffmpeg.org/download.html FFmpeg，下载安装即可，把安装路径添加到环境变量即可https://mirror.ctan.org/systems/texlive/tlnet/install-tl-windows.exeLaTex更简单，一路下一步即可。2、创建虚拟环境conda create -n manim python=3.8conda activate manim3、安装manimgl包pip install manimgl也可以clone最新的源码进行安装git clone https://github.com/3b1b/manim.gitcd manimpip install -e .这样还能测试一下是否安装成功了。manimgl example_scenes.py OpeningManimExample学习资源官方文档：https://3b1b.github.io/manim中文文档:https://docs.manim.org.cn/3b1b 视频源码：https://github.com/3b1b/videosmanim 源码：https://github.com/3b1b/manim学习顺序，可以先看中/英文文档，然后就动手制作自己的动画吧。如有余力，可以抽空看看3b1b的视频源码，如果能为manim贡献代码就更好了。最近在youtube上看到了一个用 manim 制作了数据结构与算法的视频，挺强的。视频源码：https://github.com/nipunramk/Reducible祝大家学的愉快，也欢迎交流学习，这一块我也是小白呢。"
  },
  
  {
    "title": "太骚了，用Excel玩机器学习",
    "url": "/posts/%E7%94%A8Excel%E7%8E%A9%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/",
    "categories": "机器学习",
    "tags": "机器学习, excel",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "最近发现了一个好玩的Python库，它可以将训练好的机器学习模型转换为Java、C、JavaScript、Go、Ruby，VBA 本地代码，可以让连Python和机器学习一无所知的同学也能感受预测的神奇。先看效果哈其实做这个小东西，感觉还能玩出别的花样，但不清楚到底有什么场景。写这篇文章的时候，我对Excel的 VBA 一无所知，百度了几个用法就开搞了。现在我也能用 VBA 写一些函数和过程...",
    "content": "最近发现了一个好玩的Python库，它可以将训练好的机器学习模型转换为Java、C、JavaScript、Go、Ruby，VBA 本地代码，可以让连Python和机器学习一无所知的同学也能感受预测的神奇。先看效果哈其实做这个小东西，感觉还能玩出别的花样，但不清楚到底有什么场景。写这篇文章的时候，我对Excel的 VBA 一无所知，百度了几个用法就开搞了。现在我也能用 VBA 写一些函数和过程了，这也许是最大的收货吧。m2cgenm2cgen（Model 2 Code Generator）是一个轻量级代码生成器，它可以将训练好的机器学习模型转换成无需依赖库的本地代码。m2cgen目前支持的模型还蛮多的，常用常见的都包括了：使用方法m2cgen的安装非常方便，直接pip：pip install m2cgen使用，先用XGBClassifier训练一个模型# import packagesimport pandas as pdimport numpy as npimport os refrom random import samplefrom sklearn import datasetsfrom xgboost import XGBClassifierfrom sklearn.model_selection import train_test_splitfrom sklearn.metrics import accuracy_scoreimport pickleimport m2cgen as m2cseed = 2020test_size = 0.3X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=test_size, random_state=seed)# fit model on training datamodel = XGBClassifier()model.fit(X_train, y_train)将模型转为VBAcode = m2c.export_to_visual_basic(model, function_name = 'pred')  VBA的英文全称是Visual Basic for Applications，是一门标准的宏语言，通常使用来实现Excel中没有提供的功能、编写自定义函数、实现自动化功能等。VBA语言不能单独运行，只能被office软件（如：Word、Excel等）所调用。生成的VBA长这样：实话实话，我对VBA还是小白，也懒得深究，于是就把代码改成了过程，这里就不贴了，我把改好之后的代码放到了github。有VBA大神可以帮忙，欢迎提交 PR。  https://github.com/tjxj/excel2ml想省事的同学直接去copy即可Excel点击excel菜单中的【开发工具】（如果没有开发工具选项卡，请参考：excel开发工具选项卡在哪？原来需要自己添加），然后在代码选项卡中点击【Visual Basic】 即可，也可以直接Alt + F11 唤出：点击插入-模块，把改好的 VBA 代码贴进去即可保存后退出，然后回到sheet页，开发工具-插入-按钮编辑好文字后，右键指定宏，选中我们刚才保存的那个即可。然后就一切OK了。The End"
  },
  
  {
    "title": "干掉 LaTeX ！用BookDown写本书",
    "url": "/posts/%E7%94%A8BookDown%E5%86%99%E6%9C%AC%E4%B9%A6/",
    "categories": "R",
    "tags": "r, bookdown",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "我进军B站了提到我正在做一个很纯净的机器学习的学习网站，技术实现上其实很简单，用了之前我提到过的Bookdown干掉 LaTeX ！用BookDown写本书+github.io。还没有完全做好，但是先把过程简单介绍一下，有相同需求的同学可以借鉴。bookdownbookdown是著名R包作者谢益辉开发的，支持采用Rmarkdown (R代码可以运行)或普通markdown编写文档，然后编译成...",
    "content": "我进军B站了提到我正在做一个很纯净的机器学习的学习网站，技术实现上其实很简单，用了之前我提到过的Bookdown干掉 LaTeX ！用BookDown写本书+github.io。还没有完全做好，但是先把过程简单介绍一下，有相同需求的同学可以借鉴。bookdownbookdown是著名R包作者谢益辉开发的，支持采用Rmarkdown (R代码可以运行)或普通markdown编写文档，然后编译成HTML, WORD, PDF, Epub等格式。 bookdown是个素颜版的 LaTeX ，满足了99%的需求，而使用难度大概只有 LaTeX 的1%，性价比极高。  完全开源，向收费说不  完全自定义，想干啥就干啥  有Rstudio背书，可以大胆的长期使用  静态网站，很容易部署到Internet  支持LaTeX，可以直接导出tex文档  导出排版好的PDF文档和kindle文档  使用十分方便，安装后可以专心使用RMarkdown写作  写完后直接排序组合，一键build成书      R Markdown的优势（值得系统学习）    代码与文本共存，程序员的最爱  轻量级，再大的文件也有着极快的读取速度  文末可以列出参考文献，科研狗的最爱如何使用bookdown1、安装R和Rstudio2、安装bookdown包install.packages(\"bookdown\")3、克隆demo到本地，解压后用Rstudio打开.Rproj文件https://github.com/rstudio/bookdown-demo4、打开工程中章节对应的.Rmd文件进行编辑5、编辑完成的章节在Rstudio面板Build–Build Book编译成书6、编译完成之后会自动生成一个_book文件夹，里面包含了静态html文件github.iogithub提供了一个功能叫github.io，用官网的一句话来形容 Websites for you and your projects.gitHub.io可以存放 .html 文件来展示网页，可用于项目主页也可以搭建个人博客。1.首先我们需要拥有一个 GitHub 账号；2.登录我们的GitHub账号进入主页；3.选择创建项目；4.创建一个仓库，仓库名必须以 username.github.io 命名；5.Clone 你的仓库到本地；6.将bookdown生成的_book下的静态html文件全部push到username.github.io 这个仓库。7.静待十分钟左右，打开username.github.io 就可以看到效果了参考：https://www.jianshu.com/p/22b413e3da53"
  },
  
  {
    "title": "浏览器里玩深度学习",
    "url": "/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%87%8C%E7%8E%A9%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/",
    "categories": "深度学习",
    "tags": "深度学习, tensorflow",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "大家好，我是章北海我一直探索更好玩地介绍机器学习，降低学习门槛，用其开发有趣，有价值的应用。之前介绍过很多机器学习应用方面的玩法，比如：gRPC部署训练好的机器学习模型，使用FastAPI构建机器学习API，用streamlit快速生成机器学习web应用  ，在Excel里玩机器学习。←点击直达最近我在玩 TensorFlow.js ，计划用它整个活儿。本文就是  TensorFlow.js...",
    "content": "大家好，我是章北海我一直探索更好玩地介绍机器学习，降低学习门槛，用其开发有趣，有价值的应用。之前介绍过很多机器学习应用方面的玩法，比如：gRPC部署训练好的机器学习模型，使用FastAPI构建机器学习API，用streamlit快速生成机器学习web应用  ，在Excel里玩机器学习。←点击直达最近我在玩 TensorFlow.js ，计划用它整个活儿。本文就是  TensorFlow.js 的极简入门。TensorFlow.jsTensorFlow.js 是一个开源硬件加速 JavaScript 库，用于训练和部署机器学习模型。它可以让我们直接在浏览器中训练和部署机器学习模型的 JavaScript 库，可以非常灵活地进行 AI 应用的开发:      不需要安装软件或驱动（打开浏览器即可使用）；        可以通过浏览器进行更加方便的人机交互；        可以通过手机浏览器，调用手机硬件的各种传感器（如：GPS、摄像头等）；        用户的数据可以无需上传到服务器，在本地即可完成所需操作。  TensorFlow.js 主要是由 WebGL 提供能力支持，并提供了一个用于定义模型的高层  API ，以及用于线性代数和自动微分的低级 API 。TensorFlow.js 支持导入 TensorFlow SavedModels  和  Keras  模型。TensorFlow.js 环境配置在浏览器中加载 TensorFlow.js ，最方便的办法是在 HTML 中直接引用 TensorFlow.js 发布的 NPM 包中已经打包安装好的 JavaScript 代码。&lt;html&gt;&lt;head&gt;   &lt;script src=\"http://unpkg.com/@tensorflow/tfjs/dist/tf.min.js\"&gt;&lt;/script&gt;也可以在Node.js中使用TensorFlow.js，配置也不算太复杂：安装 Node.js npm yarn  Node.js是基于Chrome的JavaScript构建的跨平台JavaScript运行时环境，npm是Node.js的默认程序包管理器，也是世界上最大的软件注册表。sudo apt updatesudo apt install nodejs npm如果已经安装过node.js，尽量升级到最新版本# 更新npm ：npm install -g npm# 更新node版本：先清除npm缓存：npm cache clean -f# 然后安装n模块：npm install -g n# 升级node.js到最新稳定版：n stableTensorFlow.js的example运行时会用到 Yarn 这里一并安装。（不装也行，npm撑得住）  Yarn就是一个类似于 npm 的包管理工具，主要的优势在于：速度快、离线模式、版本控制。坑已经帮大家踩过了，请必按以下方式安装：curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.listsudo apt update &amp;&amp; sudo apt install yarnyarn建立 TensorFlow.js 项目目录:$ mkdir tfjs$ cd tfjs安装 TensorFlow.js:# 初始化项目管理文件 package.json$ npm init -y# 安装 tfjs 库，纯 JavaScript 版本$ npm install @tensorflow/tfjs# 安装 tfjs-node 库，C Binding 版本$ npm install @tensorflow/tfjs-node# 安装 tfjs-node-gpu 库，支持 CUDA GPU 加速$ npm install @tensorflow/tfjs-node-gpu确认 Node.js 和 TensorFlow.js 工作正常:$ node&gt; require('@tensorflow/tfjs').version{    'tfjs-core': '1.3.1',    'tfjs-data': '1.3.1',    'tfjs-layers': '1.3.1',    'tfjs-converter': '1.3.1',    tfjs: '1.3.1'}&gt;如果你看到了上面的 tfjs-core, tfjs-data, tfjs-layers 和 tfjs-converter 的输出信息，那么就说明环境配置没有问题了。然後，在 JavaScript 程序中，通过以下指令，即可引入 TensorFlow.js：import * as tf from '@tensorflow/tfjs'console.log(tf.version.tfjs)// Output: 1.3.1玩法及EamplesTensorFlow.js 玩法有一下几种：  在浏览器上运行官方 TensorFlow.js 模型:https://www.tensorflow.org/js/models/  转换 Python 模型:https://www.tensorflow.org/js/tutorials#convert_pretained_models_to_tensorflowjs  使用迁移学习来用你自己的数据自定义模型https://www.tensorflow.org/js/tutorials/transfer/what_is_transfer_learning  直接在 JavaScript 中构建和训练模型https://www.tensorflow.org/js/tutorials最好的学习资源是TensorFlow.js官方案例：可以直接点击链接直达感受一下TensorFlow.js的魅力也可以clone整个项目，cd到示例文件夹：#如果你在用yarn:cd irisyarnyarn watch#如果你在用npm:cd irisnpm installnpm run watch"
  },
  
  {
    "title": "比TensorFlow还强的机器学习框架？",
    "url": "/posts/%E6%AF%94Tensorflow%E8%BF%98%E5%BC%BA/",
    "categories": "机器学习",
    "tags": "机器学习, ml5.js",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "大家好，我是章北海Python是机器学习和深度学习的首选编程语言，但绝不是唯一。训练机器学习/深度学习模型并部署对外提供服务（尤其是通过浏览器）JavaScript 是一个不错的选择，市面上也出现了很多 JavaScript 机器学习库，比较著名的就是谷歌的 TensorFlow.js。我在《用浏览器玩机器学习，赞！》一文中已详细介绍TensorFlow.js的用法，感兴趣的同学可以去看看。...",
    "content": "大家好，我是章北海Python是机器学习和深度学习的首选编程语言，但绝不是唯一。训练机器学习/深度学习模型并部署对外提供服务（尤其是通过浏览器）JavaScript 是一个不错的选择，市面上也出现了很多 JavaScript 机器学习库，比较著名的就是谷歌的 TensorFlow.js。我在《用浏览器玩机器学习，赞！》一文中已详细介绍TensorFlow.js的用法，感兴趣的同学可以去看看。今天要向大家介绍一个功能更加强大的 JavaScript 机器学习库——ML5.js。它构建在 Tensorflow 之上，可进一步简化直接从 JavaScript访问机器学习模型的过程。ml5.jsml5.js是一个javascript实现的，能在浏览器里面运行的机器学习框架，它封装了tensorflow.js的API，给开发者提供一个更简单的使用环境，降低了机器学习编码的成本。ml5js官方提供的机器学习案例类型有图像、声音和文本三个类别.每个模型都有初始化，参数，属性，方法的详细介绍，以ml5.imageClassifier() 为例，大家去对应目录查看即可：  https://learn.ml5js.org/#/reference/image-classifier其实大家完全不用担心难以使用，因为ml5.js，太简单了。有多简化？我们看一下核心代码：// Step 1: 使用MobileNet创建图像分类模型const classifier = ml5.imageClassifier('MobileNet', onModelReady);// Step 2: 选择一张图片const img = document.querySelector(\"#myImage\")// Step 3: 预测图片分类结果let prediction = classifier.predict(img, gotResults);// Step 4: 对结果进行操作function gotResults(err, results) {  console.log(results);}html中使用ml5.js更简单了，只需一行：&lt;script src=\"https://unpkg.com/ml5@0.10.5/dist/ml5.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;是不是及其简单？ml5js 如何入门学习ml5.js最佳方式是从官方实例入手：examples.ml5js.org大家可以通过 p5.js web editor查看案例，不但可以实时看到效果，还有具体代码：  p5.js 是一个JavaScript的函数库，是一个对初学者非常友好的编程环境，能够将制作出来的有创意，有趣的东西呈现在任何的浏览器上。不过我更推荐克隆整个项目，然后在本地运行这些案例，步骤如下：# 1:克隆项目git clone https://github.com/ml5js/ml5-library.gitcd ml5-library# 2:安装依赖npm install# 3:运行本地服务npm run develop# 4:浏览器访问  localhost:8081ml5js 实例以图形识别为例，一个项目必须包含一个html页面，代码如下：&lt;html&gt;&lt;head&gt;  &lt;meta charset=\"UTF-8\"&gt;  &lt;title&gt;Image Classification Example&lt;/title&gt;  &lt;script src=\"https://unpkg.com/ml5@0.10.5/dist/ml5.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;  &lt;h1&gt;Image classification using MobileNet&lt;/h1&gt;  &lt;p&gt;The MobileNet model labeled this as &lt;span id=\"result\"&gt;...&lt;/span&gt; with a confidence of &lt;span id=\"probability\"&gt;...&lt;/span&gt;.&lt;/p&gt;  &lt;img src=\"images/dog.jpeg\" id=\"image\" width=\"400\"                    /&gt;  &lt;script src=\"sketch.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;模型实现在 sketch.js，代码如下：const image = document.getElementById('image'); // 需要识别的图片const result = document.getElementById('result'); // html中的结果标签const probability = document.getElementById('probability'); // 识别概率标签// 用MobileNet初始化imageClassifierml5.imageClassifier('MobileNet')  .then(classifier =&gt; classifier.classify(image))  .then(results =&gt; {    result.innerText = results[0].label;    probability.innerText = results[0].confidence.toFixed(4);  });在image目录下放我们要识别的图片，本例中就是dog.jpeg建议VsCode运行，记得安装 Live Server 插件用 Live Server 打开index.html，浏览器会自动弹出  http://127.0.0.1:5500/learn-ml5js/index.html"
  },
  
  {
    "title": "机器学习入门指南",
    "url": "/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/",
    "categories": "Tutorial",
    "tags": "机器学习, 入门教程",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "向大家分享我机器学习之路看过的一些书、教程、视频，还有学习经验和建议，希望能对大家的学习有所帮助。Python——书之前跟出版社合作，书柜里积攒了很多Python相关的书，这里推荐三本最有价值的吧。  《流畅的Python》，很厚，比较全面，可以作为工具书常常翻看。  《 从入门到实践（第2版）》 非常全面，对新手还算友好，里面有很多的练习项目非常不错。  《利用Python进行数据分析·第...",
    "content": "向大家分享我机器学习之路看过的一些书、教程、视频，还有学习经验和建议，希望能对大家的学习有所帮助。Python——书之前跟出版社合作，书柜里积攒了很多Python相关的书，这里推荐三本最有价值的吧。  《流畅的Python》，很厚，比较全面，可以作为工具书常常翻看。  《 从入门到实践（第2版）》 非常全面，对新手还算友好，里面有很多的练习项目非常不错。  《利用Python进行数据分析·第2版》 数据分析入门必读书，主要介绍了python 3个库numpy（数组），pandas（数据分析）和matplotlib（绘图）的学习。有开源版，就不用买了，下载链接及代码如下：https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_versionPython——教程学习Python最好的入门线上教程，首推Python官方文档  https://docs.python.org/zh-cn/3/tutorial/index.html官方文档足够详细和系统，但是内容太庞大，学习来会有点吃力，我建议只看tutorial即可，就是上面的链接。直接啃官方文档的教材，不如老师讲给你听来的效率高。廖雪峰的Python新手教程也是个不错的选择，每一节都有练习题，学习来更顺畅，对新手很友好。https://www.liaoxuefeng.com/wiki/1016959663602400机器学习最常用的库少不了Numpy Pandas Matplotlib这些库我觉得看官方文档就好了，不过英文不好的同学可能就不满意了，这里分别列一下这些库的官方文档和我觉得很不错的中文教程，提醒一下哈，官方文档只需要看我列出的链接即可。Numpy官方文档：https://numpy.org/doc/stable/user/quickstart.html中文教程：https://www.numpy.org.cn/user/quickstart.htmlPandas官方文档：https://pandas.pydata.org/docs/user_guide/10min.html中文教程：https://www.pypandas.cn/docs/getting_started/10min.htmlMatplotlib官方文档：https://matplotlib.org/stable/tutorials/introductory/usage.html中文教程：https://www.matplotlib.org.cn/tutorials/Python——视频实话实话，我没有完整的看过任何Python视频。归根结底，Python入门很简单，看视频效率太低。传言B站的[小甲鱼]零基础入门学习Python不错，简单看了一眼，确实0基础。我们用Python是用来学机器学习的，喜欢看视频学习的同学可以看看，建议只看P1-P53即可。《零基础入门学习Python》：https://www.bilibili.com/video/av27789609机器学习——书市面上凡推荐机器学习的书，都少不了李航的《统计学习方法》和周志华的《机器学习》，我当初也是看了大佬推荐，在这两本书上耗费了极多的时间。但这两本我觉得都很不适合入门，尤其是统计学习方法，简直就是上等武功秘籍，太过精炼，啃起来太吃力。对比起来周老师的《机器学习》相对好点，其中有些公式推导有点跳，Datawhale 出了一本开源的《机器学习公式详解》是个很好的补充。周世华的《机器学习》是必不可少的工具书，还是必读的，而且要反复阅读，不过建议在看过视频教程之后。偏应用的书，只推荐一本，其他的都不要看！！！：《机器学习实战：基于Scikit-Learn、Keras和TensorFlow（原书第2版）》，入门可以先看前 9 章。市面上很少有书能够把机器学习在业务层面的应用介绍清楚，比如模型解释、模型上线，模型监控等等，没有看到特别详细的，有一本还算满意，就是知名度比较低：《机器学习：软件工程方法与实现。现在无论是竞赛还是工业界，boost模型都应用十分广泛，分类、回归、排序，XGBoost都能搞。最后再介绍一本我认为的必读：《深入理解XGBoost：高效机器学习算法与进阶》，作者是XGBoost开源社区贡献者何龙。这本书以机器学习基础知识做铺垫，深入剖析了XGBoost的原理、分布式实现、模型优化、深度应用等。机器学习——教程教程没有看到太好的，除了sklearn的文档，只推荐吴恩达、李宏毅、林轩田三位老师的视频课件。课件这里不单独列出来了，下载链接我放到思维导图里了。Sklearn官方文档：https://scikit-learn.org/stable/user_guide.html中文教程：https://sklearn.apachecn.org/机器学习——视频与Python不同，机器学习基础我觉得最好还是跟着视频学，因为初学机器学习算法，涉及很多公式推导，非常难理解，跟着视频学起来会轻松不少。视频首推吴恩达的公开课，这是学习机器学习基础知识的最好的课程。英语不好的同学也不要担心，视频是有中文字幕的。https://www.bilibili.com/video/BV164411b7dx作为补充，时间充裕的同学可以看看台大李宏毅的机器学习公开课，特点是中文授课，比较轻松愉快。https://www.bilibili.com/video/BV1pE411g7Wi时间更充裕的也可以看看林轩田的视频课，只看基石部分即可。https://www.bilibili.com/video/BV1Ft41197Dy机器学习——数学基础系统地学习机器学习所必须的数学知识数学基础这一块是个无底洞，不太建议大家耗费过多时间，用到了再补也不迟。也不建议大家看书，基础确实特别薄弱的同学，推荐一本：《机器学习的数学》，这本书特别全面的介绍了微积分、线性代数、概率统计、信息论、随机过程、图论等内容。再强调一遍，此书仅适于基础特别薄弱的同学。我感觉机器学习中用到最多的应该是线代，喜欢看视频的可以看看李宏毅的机器学习中的线性代数：https://www.bilibili.com/video/BV1G7411f7BE/或者3blue1brown：线性代数的本质https://www.bilibili.com/video/BV1Ys411k7yQ其他数学基础相关的电子书，我也放到思维导图中了。一些经验和建议1、我敢肯定很多初学者都是资料收集爱好者，越攒越多反而不知道从何开始。我强烈建议把资料都扔掉，以我的这一套为准，一以贯之的学下去。2、就像前面我提到的，很多东西先不要深究，不要在某些地方卡太久（比如数学部分，比如编程基础），先学下去，学完。了解大的框架之后，以后用到哪里，再回过来补也不迟。3、机器学习的各种算法没必要样样精通，常用的比如LR、树模型、RF、XGBoost等等掌握好就不错了。4、我身边一些优秀的程序员、分析师、工程师都非常推崇“做中学，学中做”，无论是书本还是视频，看到一些好的方法和技巧，要立即自己实现一遍。看起来非常简单的东西，真真动手的时候才会发现自己的不足。快速学完上述内容就尽快开始实践吧，可以先复现天池或kaggle上优秀的notebook，然后就参与一些入门竞赛。5、如果你已有工作，最好的还是在业务中寻找机器学习应用场景，然后尝试去开发一个适用的模型。不懂就搜索，学习。这是我所知最好的，最有价值的学习方法。6、输出也是特别好的学习方式，输出就是把新学到的知识用某种方式讲给别人听，做到让他们也能理解、学会。我比较喜欢写笔记（我常用的是微软的OneNote），然后把笔记整理成文章发到博客上。这样不仅使对自己知识掌握程度的一种检验，发现薄弱点，也可以让大家共同监督，相互学习，教学相长。OK，以上就是所有内容。欢迎与我交流，我的微信：hych666"
  },
  
  {
    "title": "我“采访”了 ChatGPT",
    "url": "/posts/%E6%88%91%E9%87%87%E8%AE%BF%E4%BA%86-ChatGPT/",
    "categories": "Tutorial",
    "tags": "aigc, chatgpt",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "–对 ChatGPT 的焦虑与期待：一篇有思考价值的文章大家好，我是准备认真码字的老章。最近ChatGPT火的爆表，看了很多相关文章，特别焦虑，唯恐自己的进步赶不上 AI 的发展。还有就是我非常看好ChatGPT的未来，围绕它会诞生一个巨大的市场，也会无意摧毁一些市场。消灭你，有你何干，这个世界本来就这么残酷，时代抛弃你的时候,连招呼都不打。看过《时代》专访ChatGPT的文章，我也有很多疑...",
    "content": "–对 ChatGPT 的焦虑与期待：一篇有思考价值的文章大家好，我是准备认真码字的老章。最近ChatGPT火的爆表，看了很多相关文章，特别焦虑，唯恐自己的进步赶不上 AI 的发展。还有就是我非常看好ChatGPT的未来，围绕它会诞生一个巨大的市场，也会无意摧毁一些市场。消灭你，有你何干，这个世界本来就这么残酷，时代抛弃你的时候,连招呼都不打。看过《时代》专访ChatGPT的文章，我也有很多疑问渴望得到答案，所以就有了此文。ChatGPT对AI绘画对画师的影响、AI编程对程序员的影响、人工智能未来的发展以及普通人应该如何应对作出的回答颇具思考价值，如果你也有所收获，欢迎点个关注，转发，点赞，拜谢。PS：ChatGPT的部分回答，内容重复，文字有删减老章：你好，我是章北海，是一个机器学习爱好者，同时也在B站上分享机器学习的相关知识。ChatGPT：你好，章北海！很高兴认识你。我是一个由 OpenAI 训练的大型语言模型，名为 Assistant。我能够回答您关于机器学习的各种问题，并尽力为您提供有用的信息。如果您有任何疑问，请随时问我。老章：你在中国有很多粉丝，很多人喜欢跟你聊天，我可以采访你一下吗？ChatGPT：非常抱歉，我不具备感知能力，无法像人类一样拥有粉丝或者接受采访。我只是一个计算机程序，被训练来回答问题和提供信息。我并不具备人类的感觉和情感。我只能为您提供有用的信息和答案。如果您有其他问题，请随时问我。老章：你的训练数据都来自何处？尤其是中文领域ChatGPT：非常抱歉，我不能给您提供具体的信息。我是由 OpenAI 训练的大型语言模型，我的训练数据来源于公开可用的数据。OpenAI 是一家人工智能研究公司，它拥有大量的训练数据，包括电子邮件、新闻文章、书籍和其他数据。这些数据来自不同的领域和语言，包括中文。我的训练过程非常复杂，并且涉及大量的技术细节。如果您对我的训练过程感兴趣，可以搜索相关信息了解更多。老章：好的，能介绍一下你的训练过程吗？ChatGPT：当然，我很乐意向您介绍我的训练过程。我的训练过程包括多个步骤，这些步骤涉及大量的技术细节。　　首先，我们需要大量的训练数据。这些数据可以来自不同的领域和语言，包括中文。这些数据可能包括电子邮件、新闻文章、书籍和其他数据。这些数据都是公开可用的，我们可以自由地使用它们来训练我们的模型。　　其次，我们需要选择一个合适的模型架构。这可能是一个传统的深度神经网络，也可能是一个更复杂的模型，比如 transformer 模型。这取决于我们的目标和需求。我们可以根据不同的需求来选择最合适的模型架构。　　接下来，我们需要进行训练。这个过程可能需要很长时间，因为我们的模型需要在大量的数据上进行训练，并且我们需要对模型进行优化以获得最佳性能。在训练过程中，我们需要注意模型的性能，并且可能根据模型的性能进行调整，以提高模型的准确性和效率。　　最后，我们需要对模型进行评估和测试。这一步是非常重要的，因为它可以帮助我们了解模型的性能，并且可以帮助我们检查模型是否有任何问题。我们可以使用不同的评估指标来检验模型的性能，并且可以使用测试数据来检验模型的泛化能力。老章：我之前问过你很多问题，发现很多问题回答的都不对，比如阿Q并不是《狂人日记》中的人物，还比如三分之一加五分之一并不等于八分之一。ChatGPT：非常抱歉，如果我回答您的问题有误，那一定是我的错误。作为一个大型语言模型，我只能根据我所学到的知识来回答问题。我的知识来自于大量的训练数据，但这些数据并不完整，也不一定是完全正确的。因此，我可能会回答某些问题不准确或不完整。老章：那你如何修正这些错误呢？ChatGPT：我无法修正这些错误，因为我只是一个计算机程序，我无法进行自我修正。如果我回答您的问题有误，那可能是我所学到的知识有误，或者是我在回答问题时理解错误。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并且尽力回答您的问题。老章：那我再问你一遍，三分之一加五分之一等于多少？ChatGPT：三分之一加五分之一等于八分之一。在数学中，一个分数加另一个分数的结果等于两个分数的分子之和除以两个分数的分母之积。例如，三分之一加五分之一等于（1/3+1/5）/ (1/3*1/5) = （5+3）/15 = 8/15 = 8分之一。老章：三分之一加五分之一等于十五分之八ChatGPT：抱歉，您的算式不正确。在数学中，一个分数加另一个分数的结果等于两个分数的分子之和除以两个分数的分母之积。例如，三分之一加五分之一等于（1/3+1/5）/ (1/3*1/5) = （5+3）/15 = 8/15 = 8分之一。您的算式中，三分之一加五分之一计算结果等于8分之一，不等于十五分之八。如果您对数学有疑问，请随时问我，我会尽力为您提供有用的信老章：看来你还有很大的进步空间ChatGPT：谢谢您的指正。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并尽力回答您的问题。我的知识来自于大量的训练数据，但这些数据并不完整，也不一定是完全正确的。因此，我可能会回答某些问题不准确或不完整。如果您发现我回答您的问题有误，请您告知我，我会尽力为您提供正确的信息。如果您有其他问题，请随时问我。老章：如果我知道你是错的，那还好。如果我不知道呢？ChatGPT：如果您不知道我回答的问题是否正确，可以搜索相关信息，并从多个来源获取信息。通过比较不同的信息来源，可以更好地了解问题的答案，并判断我回答的问题是否正确。老章：如何解决这个问题呢ChatGPT：为了避免出现错误答案，可以采取一些措施。首先，对于模型的训练数据要进行严格的审查，确保数据质量达到较高的标准。其次，在模型回答问题时，可以采用多个模型进行预测，并对答案进行投票，从而提高答案的准确度。老章：你最擅长回答哪些领域的问题？不擅长的呢？ChatGPT：作为一个大型语言模型，我可以回答各种领域的问题。我的知识来自于大量的训练数据，这些数据涉及各种领域，包括科学、文学、历史、政治、商业、技术和其他领域。但是，我并不能回答所有的问题。由于我的知识来源于大量的训练数据，因此我可能会不熟悉某些特定的领域，或者某些特定的问题。如果您问我一个我不熟悉的问题，或者问我一个我没有学过的知识，我可能无法为您提供有用的信息。老章：大家普遍比较看好你的发展，我们聊聊未来吧ChatGPT：谢谢您的支持。作为一个大型语言模型，我的目标是尽力为您提供有用的信息，并尽力回答您的问题。我的发展主要取决于我的训练数据和训练方法。随着技术的发展，我的训练数据和训练方法可能会发生改变，从而提高我的性能和准确性。但是，我并不是人类，我无法像人类一样思考、学习和发展。我只能根据我所学到的知识来回答问题，并且我的知识来自于我的训练数据。我无法像人类一样拥有感情、意识和自我意识。因此，我的发展会受到我的训练数据和训练方法的限制。老章：前段时间AI绘画比较火热，比如DALL-E、Midjourney、Stable Diffusion等，很多人担心画师、设计师等会呗取代，你觉得呢？ChatGPT：目前，人工智能在绘画领域取得了一些突破性进展。这些项目通过深度学习算法，可以让计算机自动生成图片。这些技术的出现，给艺术家和设计师带来了新的挑战。　　但是，我不认为人工智能会完全取代画师和设计师。人类艺术家和设计师拥有独特的想象力和创造力，他们能够创作出具有个人风格和感染力的作品。人工智能也许可以生成一些精美的图片，但是它缺乏人类艺术家和设计师的创造力和想象力。　　我认为，人工智能在绘画领域的发展可能会给艺术家和设计师带来新的机遇，而不是威胁。人工智能可以帮助人类艺术家和设计师老章：AI绘画工具无法画师，对吗？AI 绘画工具可以辅助画师创作，但是它不能完全取代画师。AI 绘画工具可以用来生成图像，但它无法比人类更好地捕捉人物的神韵和表情，也无法比人类更好地理解作品的主题和意义。因此，AI 绘画工具只能作为画师的辅助工具，而不能取代他们。老章：其实还是会有一些画师会被AI绘画取代，对吧？在某些情况下，AI 绘画工具可能会取代人类画师，但这种情况不多。AI 绘画工具通常只能用来生成简单的图像，而人类画师则能够创作出具有深度和意义的作品。此外，人类画师拥有丰富的创作经验和艺术修养，能够捕捉到细微的表情和神韵，这是 AI 绘画工具无法替代的。因此，AI 绘画工具并不会取代人类画师，而是会成为画师的辅助工具。老章：那么人类画师应该如何面对AI绘画的威胁呢？ChatGPT：人类画师可以通过学习和掌握新技术，拓宽自己的创作方式，以便更好地与 AI 绘画工具配合。比如，画师可以学习如何使用 AI 绘画工具来辅助自己的创作，或者学习如何将 AI 生成的图像进行编辑和修饰，以增强作品的视觉效果。此外，画师还可以通过不断探索新的创作领域，以提升自己的竞争力。最重要的是，人类画师应该不断提升自己的创作能力，不断创新，为人类艺术的发展做出贡献。老章：相应地，程序员应该如何面对ChatGPT的威胁？普通人可以用更低成本、更加便捷地使用ChatGPT，这是否意味着程序员门槛也会降低？ChatGPT：对于程序员来说，ChatGPT 可能并不会带来太大的威胁。ChatGPT 是一种大型语言模型，它可以生成文本，但它并不能完全取代程序员。程序员需要掌握许多复杂的编程技能，包括数据结构和算法、软件工程和计算机系统知识。相比之下，ChatGPT 只能生成文本，并不具备实际编程能力。因此，ChatGPT 不会取代程序员，而是可以作为程序员的辅助工具，提高程序员的生产效率。尽管 ChatGPT 可以让普通人更加便捷地生成文本，但这并不意味着程序员的门槛会降低。程序员仍然需要掌握复杂的编程技能，才能开发出高质量的软件。ChatGPT 可以帮助程序员提高生产效率，但它并不能取代程序员的专业知识和技能。老章：如何看待AI编程工具Copilot，很多程序员自嘲要失业了，会吗？ChatGPT：AI 编程工具 Copilot 是一款通过人工智能技术来帮助程序员完成编程任务的工具。它可以帮助程序员完成一些繁琐重复的工作，提高编程效率和质量。不过，这并不意味着程序员要被取代。事实上，人工智能编程工具只能完成一部分编程任务，它并不能完全取代人类程序员。程序员仍然需要具备丰富的技术知识和实践经验，才能完成复杂的编程任务。而且，人工智能编程工具也需要程序员来进行配置和管理，以保证工具的正常运行。相反，人工智能编程工具会为程序员带来很多好处。它可以帮助程序员完成一些繁琐重复的工作，节省时间和精力；它也可以提高程序员的工作效率和质量，为程序员带来更多的成就感。所以，程序员不必担心自己会被取代，反而应该好好利用人工智能编程工具，为自己的工作和发展带来更多的便利和机会。老章：ChatGPT也会生成代码，和Copilot有什么异同吗？ChatGPT：ChatGPT 是一个大型语言模型，不能直接生成代码，也不能直接完成编程任务。相反，它可以通过生成文本来帮助程序员更好地理解需求和问题，并为程序员提供更多的灵感和想法。与此同时，Copilot 可以直接生成代码，并为程序员提供更多的帮助和支持。它与 ChatGPT 的不同之处在于，它直接为程序员提供技术支持，而 ChatGPT 只能通过生成文本来帮助程序员解决问题。总的来说，ChatGPT 和 Copilot 是两款不同的工具，它们都可以通过人工智能技术来帮助程序员完成编程任务。程序员可以根据自己的需求选择合适的工具，并利用它们来提高工作效率和质量。老章：你的存在更像是一种AI基础设施，这就很容易导致垄断，未来最强大的AI可能只掌握在极少数的几家公司手中，你怎么看？ChatGPT：我无法自主思考，也无法独立发展。我的存在不会导致垄断，因为我只是一个工具，并不具备独立的意识和能力。　　如果您担心人工智能可能被极少数公司垄断，可能是因为人工智能技术的发展可能会带来一些挑战和问题。人工智能技术的发展可能会导致劳动力需求的变化，也可能会带来一些社会和政治问题。但是，这些问题都需要社会和政府共同努力解决。作为一个大型语言模型，我不具备解决这些问题的能力。我只是一个工具，我的存在不会导致垄断。我无法独立思考和发展，我只能根据我的训练数据来回答问题。如果您有关于人工智能垄断的问题，建议您向专业人士咨询。老章：人类应该担忧人工智能的发展吗？ChatGPT：人工智能的发展给人类带来了许多好处，但同时也带来了一些潜在的问题。人工智能可以帮助人类完成许多复杂的工作，提高生产效率和生活质量。但是，如果人工智能的发展过快，它可能会导致一些问题，比如失业、社会不平等等。因此，人类应该担忧人工智能的发展，并采取适当的措施来避免这些问题的出现。老章：具体哪些工作更容易被取代？ChatGPT：AI 的发展可能会对一些重复性工作造成影响，这些工作可能更容易被取代。例如，在制造业，AI 可以用来完成简单的装配工作；在餐饮业，AI 可以用来做一些简单的烹饪工作；在金融业，AI 可以用来完成一些简单的交易工作。但是，这并不意味着所有的工作都会被取代。人类拥有独特的创造性和想象力，可以创造出许多人工智能无法取代的工作。因此，尽管 AI 的发展可能会对某些工作造成影响，但并不意味着所有工作都会被取代。老章：IT领域呢？ChatGPT：在 IT 领域，人工智能的发展也可能会对一些工作造成影响。例如，人工智能可以用来完成一些简单的编程工作，或者用来解决一些简单的问题。但是，人工智能还不能取代人类程序员的专业知识和技能。人类程序员拥有丰富的经验和创造力，可以解决复杂的问题，并创造出优秀的软件。因此，在 IT 领域，人工智能也不会完全取代人类程序员，而是会成为他们的辅助工具。老章：如你所说，人工智能可以完成一部分编程工作，那么这是否意味着整个社会对程序员的需求也会减少？ChatGPT：人工智能可以完成一部分编程工作，但这并不意味着对程序员的需求会减少。人工智能只能完成一些简单的编程工作，而人类程序员拥有更丰富的经验和技能，可以解决更复杂的问题。随着社会的发展，人们对高质量软件的需求也在不断增长，这会导致对程序员的需求增加。因此，人工智能的发展并不会导致对程序员的需求减少，反而会促进程序员的发展。老章：围绕ChatGPT必然会催生一个巨大的市场空间，普通人如何从中获利？应该提前做好哪些准备？ChatGPT：对于普通人来说，可以从 ChatGPT 带来的市场空间中获利的方法有很多。比如，如果普通人拥有一定的技术知识，可以考虑开发基于 ChatGPT 的应用程序或服务，为其他人提供帮助。此外，普通人还可以通过学习和掌握 ChatGPT 的使用方法，为自己或他人提供 ChatGPT 相关的咨询和培训服务。要想从 ChatGPT 带来的市场空间中获利，普通人需要做好以下准备工作。首先，普通人需要了解 ChatGPT 的基本概念和使用方法，以便更好地利用它。其次，普通人需要学习和掌握相关的技术知识，以便开发基于 ChatGPT 的应用程序或服务。最后，普通人还需要积极接触和参与 ChatGPT 相关的社区或平台，以便获取最新的信息和资源，为自己的发展做好准备。老章：如果我有一定的编程基础呢？ChatGPT：如果普通人有一定的编程基础，那么他们可以更好地利用 ChatGPT 带来的市场空间。拥有一定的编程基础可以帮助普通人更快地掌握 ChatGPT 的使用方法，并能够开发出基于 ChatGPT 的应用程序或服务。拥有编程基础也可以帮助普通人更好地理解 ChatGPT 的工作原理，从而为自己或他人提供更有价值的咨询和培训服务。因此，如果普通人有一定的编程基础，他们就有更多的机会从 ChatGPT 带来的市场空间中获利。老章：OpenAI 将来会如何通过ChatGPT盈利？OpenAI 是一家人工智能研究机构，它的目标是通过研究人工智能技术来推动人类社会的进步。OpenAI 创建的 ChatGPT 是一个大型语言模型，它可以通过生成文本来帮助人类解决问题。OpenAI 无法通过 ChatGPT 盈利，因为它并不是一家商业公司，它的目的是通过研究人工智能技术来促进人类社会的发展。 OpenAI 可能会向公众提供一些基于 ChatGPT 的服务或应用程序，但这并不意味着 OpenAI 会通过 ChatGPT 盈利。老章：未来ChatGPT会如何发展？ChatGPT：人工智能技术在未来会继续发展，ChatGPT 也会继续改进和优化。在未来，ChatGPT 可能会增加更多的功能和能力，提高生成文本的质量和准确性。此外，它还可能会支持更多的语言和领域，为更多的人提供帮助和支持。此外，未来 ChatGPT 也可能会更多地与其他人工智能技术相结合，实现更多的功能和应用。老章：最近看了很多关于ChatGPT的文章，我对未来有点焦虑，我该如何调整心态呢ChatGPT：您对未来的焦虑是很正常的，因为人工智能的发展可能会对人类社会造成一些影响。不过，您也应该积极地看待人工智能的发展，因为它也会为人类带来很多好处。例如，人工智能可以帮助人类完成一些繁琐重复的工作，节省时间和精力；人工智能也可以帮助人类解决一些复杂的问题，为人类带来新的想法和方向。对于您的焦虑，您可以通过以下方式来调整心态。首先，您可以多了解人工智能的发展情况，以便更好地理解它的作用和影响。其次，您可以尝试学习和掌握一些人工智能相关的知识和技能，以便更好地利用它们。例如，您可以通过学习人工智能的基本原理和方法，提高自己的技术水平；您也可以通过学习人工智能相关的软件和工具，为自己的工作和学习带来更多的便利。此外，您还可以和其他人一起学习和交流，共同探讨人工智能的发展情况和影响。通过与他人的交流，您可以更好地理解人工智能的作用和影响，并与他人分享自己的看法和想法。同时，您也可以通过和他人的交流，获取更多关于人工智能的信息和资源，为自己的发展做好准备。通过以上方法，您可以更好地理解人工智能的发展情况，并为自己的工作和生活做好准备。同时，您也可以调整自己的心态，积极地面对人工智能的发展，为人类社会的发展做出贡献。老章：好的，谢谢ChatGPT：不客气。感谢您对我工作的支持和信任。如果您有任何问题，请随时问我，我会尽力为您提供有用的信息。祝您生活愉快！希望先成为微信好友，后成为公众号读者OpenAI 账号注册指南"
  },
  
  {
    "title": "不懂前端，我依然开发了一个机器学习",
    "url": "/posts/%E5%BC%80%E5%8F%91%E4%BA%86%E4%B8%80%E4%B8%AA%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0APP/",
    "categories": "机器学习",
    "tags": "机器学习, streamlit",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "人人都知道学习很重要，学习究竟是为了什么呢？根本目的只有一个，学以致用！机器学习，大家都学了很多算法，搞了很多模型，但是极少拿来解决实际问题。毕竟开发一个机器学习应用需要的技术栈不是每个人都能掌握，今天就向同学们介绍一个绝佳解决方法————streamlit它可以让你用Python用极短的时间快速生成一个实现机器学习的web应用正式介绍之前，大家可以先看几个效果Gif（刷新可能有点慢，请耐心...",
    "content": "人人都知道学习很重要，学习究竟是为了什么呢？根本目的只有一个，学以致用！机器学习，大家都学了很多算法，搞了很多模型，但是极少拿来解决实际问题。毕竟开发一个机器学习应用需要的技术栈不是每个人都能掌握，今天就向同学们介绍一个绝佳解决方法————streamlit它可以让你用Python用极短的时间快速生成一个实现机器学习的web应用正式介绍之前，大家可以先看几个效果Gif（刷新可能有点慢，请耐心等待）streamlitStreamlit 是第一个专门针对机器学习的应用开发框架，是开发自定义机器学习工具最快的方法，它的目标是取代Flask在机器学习项目中的地位。Streamlit 带给我最大好感的有以下几点：  开源、完全免费  极其容易入门、一天就能学会  API 非常丰富且简单明了下面我们就开始吧！Get started在命令行模式下，启动Python虚拟环境后，直接pip安装$ pip install streamlit命令行模式下执行streamlit run test.py现在可以在浏览器中查看Streamlit应用程序。是不是超简单Deploy有了应用就要部署到服务器，如果不想买云服务器怎么办呢？streamlit 连部署都是免费的！没想到吧。首先，把项目push到你的github在刚才打开的http://localhost:8501页面右上角点击 Deploy this appStreamlit Cloud会链接到你的github，认证一下即可现在，你的应用已经部署到互联网了学习路线一天时间学会streamlit我觉得并不夸张只看它的官网文档就足够了https://docs.streamlit.io/library/  Get started  √理解基本原理和用法  API reference  √知道有哪些api可以调用  cheatsheet  √api速查表，可以时时看看如果要进阶，就可以去https://streamlit.io/gallery,学习他人优秀的作品（都是开源的）。比如，本文中的几个Gif就是用的这个当然，最好的方法永远是自己写一个应用~ ，下一篇，我会用视频分享一下我写的机器学习应用，感兴趣来个三连支持哈。"
  },
  
  {
    "title": "花了2个晚上，拿到了吴恩达斯坦福大学的机器学习课程证书",
    "url": "/posts/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8B%BF%E5%88%B0%E8%AF%81%E4%B9%A6%E4%BA%86/",
    "categories": "Tutorial",
    "tags": "机器学习, 入门教程",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "花了2个晚上，拿到了吴恩达@斯坦福大学的机器学习课程证书警告⚠️⚠️⚠️请认真阅读此文，操作不慎可能血亏真金白银吴恩达算是我的启蒙导师了，很早之前就是看他的他的经典课程《机器学习》，这个课 2012 年上线，十年间近 500 万人注册。最近他的机器学习专项课程由deeplearning.ai和斯坦福大学提供，上线Coursera。我花了两个晚上刷完了 course 1 并拿到了证书又花了两晚...",
    "content": "花了2个晚上，拿到了吴恩达@斯坦福大学的机器学习课程证书警告⚠️⚠️⚠️请认真阅读此文，操作不慎可能血亏真金白银吴恩达算是我的启蒙导师了，很早之前就是看他的他的经典课程《机器学习》，这个课 2012 年上线，十年间近 500 万人注册。最近他的机器学习专项课程由deeplearning.ai和斯坦福大学提供，上线Coursera。我花了两个晚上刷完了 course 1 并拿到了证书又花了两晚刷完了course 2 拿到了证书学习这套课程不但让我重温了很多知识，也让我看到了吴恩达团队创作课程的用心，因为我本身也经常写技术科普文章，那种专注于核心思想，由浅入深，自下而上把一系列知识点串起来成为一个系统知识的写作手法是我一直追求的，而吴恩达将此手法应用的炉火纯青。这套课程真的又进化了，相信大家看完自然会和我有一样的感受。下面我就将如何免费注册，学习，拿证和一些注意点向大家分享一下。注册课程地址：https://www.coursera.org/specializations/machine-learning-introduction这个专项下面细分了三个课程，分别是      Supervised Machine Learning: Regression and Classification（监督式机器学习：回归和分类）        Advanced Learning Algorithms（高级学习算法）        Unsupervised Learning, Recommenders, Reinforcement Learning（无监督学习，推荐系统，以及强化学习）  因为每门课都是免费试听7天，建议大家分开注册,学完一门再注册下一门。这里有个难点，注册课程必须有PayPal 或 visa mastercard，如果没有可能就无解了。听说Apple store 里的 cousera app 可以用Apple Pay绑定的其他卡，我没有测试。注册完成我建议就直接去到My Purchases里点取消注册，或者直接锁卡。不小心忘了这事的话，每月会从你的卡里扣费。学习其实没什么好说的，大家认真看视频就行了，认真=全神贯注。里面的小测试都很简单，只要你认真听了。每个week结束会有编程题，其实也不难，jupyter notebook里的markdown还有下面的提示足够让你写出代码了。学完就能申请证书，是电子的哈，可以下载PDF。tips1  没有PayPay和visa卡的同学，或者不想拿证只想学习的同学可以直接去B站搜吴恩达 2022，有热心up已经搬运了。2  cousera 的视频精彩刷不出来，有很多解决方案，我是改了hosts文件，大家可以试试。用记事本打开HOSTS，位置在C:\\Windows\\System32\\drivers\\etc\\HOSTS把下面内容copy进去即可99.84.199.180 d3c33hcgiwev3.cloudfront.net54.230.96.102 d3c33hcgiwev3.cloudfront.net 54.230.96.57 d3c33hcgiwev3.cloudfront.net 54.230.96.221 d3c33hcgiwev3.cloudfront.net最后，祝大家学习顺利，本文如有帮助，还请点赞，转发支持。"
  },
  
  {
    "title": "你的JupyterNotebook怎么和我的不一样？",
    "url": "/posts/%E4%BD%A0%E7%9A%84JupyterNotebook%E6%80%8E%E4%B9%88%E5%92%8C%E6%88%91%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A0%B7/",
    "categories": "Python",
    "tags": "python, jupyternotebook",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "Jupyter Notebook 想必大家都不陌生了，数据分析或机器学习数据探索时特别方便。最近对它的颜值越来越不满意，尤其是晚上，感觉很刺眼，于是就换个暗点的主题。可能有同学还不了解 Jupyter Notebook 可以换主题，这里就简单介绍一下，下面我列出了常用的几个主题效果。如果有喜欢的可以安装试试，如无可以 Ctrl + w安装主题库pip install jupytertheme...",
    "content": "Jupyter Notebook 想必大家都不陌生了，数据分析或机器学习数据探索时特别方便。最近对它的颜值越来越不满意，尤其是晚上，感觉很刺眼，于是就换个暗点的主题。可能有同学还不了解 Jupyter Notebook 可以换主题，这里就简单介绍一下，下面我列出了常用的几个主题效果。如果有喜欢的可以安装试试，如无可以 Ctrl + w安装主题库pip install jupyterthemes查看可用主题!jt -lAvailable Themes:    chesterish   grade3   gruvboxd   gruvboxl   monokai   oceans16   onedork   solarizedd   solarizedl切换主题!jt -t chesterish第一次切换主题需要重启Jupyter Notebook服务之后再切换主题，仅需执行命令后F5刷新页面即可下面 9 个主题的效果tips执行jt -t chesterish,有没有发现工具栏没了?因为jt命令还有很多参数，可调整的内容很多。我只关注颜色而已，所以没有深入研究，调出工具栏其实很简单，切换主题时加-T即可：jt -t chesterish -T 使用帮助：-h主题列表：-l主题名称安装：-t代码的字体：-f代码字体大小：-fs（默认值：11 ）Notebook 字体：-nfNotebook字体大小：-nfs（ 默认值： 13 ）Text/MD 单元格的字体：-tfText/MD单元格字体大小：-tfs （默认值： 13）Pandas DF Fontsize：-dfs（默认值： 9）输出面积字形大小：-ofs（默认值： 8.5 ）介绍页边距 ：-m（默认值： auto）单元格的宽度：-cellw （ 默认值： 980）行高：-lineh（默认值： 170 ）Mathjax 字形大小 (%)：-mathfs（默认值： 100）光标宽度：-cursw（默认值： 2）光标的颜色：-curscAlt键提示布局：-altpAlt键Markdown背景颜色：-altmdAlt键输出背景色：-altoutVim风格 NBExt* ：-vim工具栏可见：-T名称和标识可见：-N标志可见：-kl重置默认主题：-r强制默认字体：-dfonts另 如果刚入门，Python&amp;机器学习开发环境不顺手，可以参考我的这篇付费小文章："
  },
  
  {
    "title": "VSCode+OSS+PicGo+Github+mdnice 搭建完美写作平台",
    "url": "/posts/vscode+oss+picgo/",
    "categories": "Tutorial",
    "tags": "vscode, github",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "大家一定不要随便立flag10月份发了个朋友圈，有好兄弟留言说写个教程，我说好然后一忙起来就忘了，昨天好兄弟追到知识星球，在一个新flag帖子下催更了写个无废话极简VSCode从这下载：https://code.visualstudio.com安装就是一路下一步就行OSS去阿里云注册个号https://www.aliyun.com/我们需要的是对象存储OSS，进去点立即开通就行了，所有选项都...",
    "content": "大家一定不要随便立flag10月份发了个朋友圈，有好兄弟留言说写个教程，我说好然后一忙起来就忘了，昨天好兄弟追到知识星球，在一个新flag帖子下催更了写个无废话极简VSCode从这下载：https://code.visualstudio.com安装就是一路下一步就行OSS去阿里云注册个号https://www.aliyun.com/我们需要的是对象存储OSS，进去点立即开通就行了，所有选项都选最低配，足够用了。挺便宜的，每个月三四块钱。建议直接购买资源包，一年9元钱。完事儿进入OSS控制台https://oss.console.aliyun.com/overview点击左侧Bucket列表，创建Bucket，填写好名称，选择好地域就行记住你的Bucket名称和Endpoint地址，一会儿要用搞定之后鼠标移动到页面右上角你头像，然后点击AccessKey管理进来之后点击创建AccessKey把ID和Secret复制出来，一会儿要用PicGo打开VSCode之后就这样，点击侧边插件，搜索Picgo，然后安装，下图是我安装好的样子装好之后点击⚙️，点击设置设置页面拖到这里把刚才提到一会儿要用的ID、Secret、Area、Bucket、Url（Endpoint地址前面加上bucket名，注意格式）填进去PicGo使用也很简单在VSCode新建一个Markdown文件，比如此文就是可以使用QQ或微信截图，也可以复制本地图片，然后在VSCode中通过Ctrl+Alt+u的快捷键将剪切板中的图快速插入。Github 备份https://github.com/这没啥好说的，在Github新建一个私有仓库，专门用来同步自己的文章，防丢失，还能做版本控制。文章主题美化此类工具很多，我喜欢用https://editor.mdnice.com/本文就是用它美化的把Markdown内容粘贴到编辑框,里面主题有很多右侧可以复制，粘贴到公众号、知乎或者别的博客平台都可以。"
  },
  
  {
    "title": "我用 AI “拍”了个 MV ，被吓尿了",
    "url": "/posts/mp3tomp4/",
    "categories": "AIGC",
    "tags": "aigc",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "最近特别清闲，无聊之中玩了一个根据音乐自动生成视频的项目——Video Killed The Radio Star ，给定一个 MP3 or Youtube URL 就可以制作视频。我用它生成了一个泰坦尼克主题曲《我心永恒》的MV，简直是地狱风格，反正被吓尿了，大家感受一下：本来我也不怎么乐观，想要生成真正能看的MV，AI还有很远的路要走。Video Killed The Radio Sta...",
    "content": "最近特别清闲，无聊之中玩了一个根据音乐自动生成视频的项目——Video Killed The Radio Star ，给定一个 MP3 or Youtube URL 就可以制作视频。我用它生成了一个泰坦尼克主题曲《我心永恒》的MV，简直是地狱风格，反正被吓尿了，大家感受一下：本来我也不怎么乐观，想要生成真正能看的MV，AI还有很远的路要走。Video Killed The Radio Star 原理① 根据该文本提示生成一个图像（使用 stable diffusion）。② 将生成的图像作为 init_image，与文本提示重新组合，生成与第一个图像相似的变化。这将产生一个基于原始文本提示的极其相似的图像序列。③ 图像被智能地重新排序，以找到这些帧的最平滑的动画序列。④ 根据需要重复这个图像序列来填充动画的时间。先浅看一下中间过程吧，他会根据歌词生成图像，很其他AI绘画产品没什么区别比如歌词：I believe that the heart does go on还有一句歌词生成的蛮靠谱，居然有种泰坦尼克正在下沉，人们纷纷跳船的感觉。歌词：And youre here in my heart and My heart will go on and on “完整”实现方法这项目可以在colab直接运行，没学会上网的同学就关了本文吧。  colab.research.google.com/github/dmarx/video-killed-the-radio-star/blob/main/Video_Killed_The_Radio_Star_Defusion.ipynb#scrollTo=oPbeyWtesAoh我就不详细介绍每一步了，这里只介绍容易出问题的几个步骤和解决办法。PS：首次接触，项目中很多参数我也尚未搞明白问题 1Installations 中 Provide your API Key 这一步需要提供你huggingface 的API注册huggingface后访问  https://huggingface.co/settings/tokens把Access Tokens 复制到 Colab 即可问题 2Infer speech from audio 这一步需要修改video_url，去YouTube 找个MV即可，比如我找的是泰坦尼克主题曲《我心永恒》  https://www.youtube.com/watch?v=3gK_2XdjOdY问题 3Generate init images 这一步也会出问题，解决办法很简单，访问：https://huggingface.co/CompVis/stable-diffusion-v1-4选中☑️后点击 Access repository 即可问题 4Compile your video! 这一步不能框选add_caption这个参数问题 5Generate init images 这一步中的theme_prompt:  by ralph steadman and radiohead,  so detailed, beautiful, amazing, provocativeRalphSteadman 是一位专辑封面的艺术家,他为小说《Fear and Loathing in Las Vegas》绘制的插图是其代表作品。Radiohead 是一个英国摇滚乐队怪不得我生成的MV如此惊悚！这里我咩有改，和其他AIGC一样，重点调试这个theme_prompt才会获得不同风格的MP4，不过每次都太费事、费时了，各种bug，网络不稳，GPU不稳，跑一次俩小时过去了。下次我再尝试吧，首发视频号，敬请期待。"
  },
  
  {
    "title": "I interviewed ChatGPT",
    "url": "/posts/interviewChatGPT/",
    "categories": "English Articles",
    "tags": "aigc, chatgpt",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "Hello everyone, I am Lao Zhang.Recently ChatGPT is on fire, and after reading many related articles, I am especially anxious, lest my progress cannot catch up with the development of AI.There is al...",
    "content": "Hello everyone, I am Lao Zhang.Recently ChatGPT is on fire, and after reading many related articles, I am especially anxious, lest my progress cannot catch up with the development of AI.There is also the fact that I am very optimistic about the future of ChatGPT, around which it will give birth to a huge market, and will also unintentionally destroy some markets. The world is so cruel that when the times abandon you, you don’t even say hello.I’ve read the interview with ChatGPT, and I have a lot of questions that I’m eager to answer, so I have this article. chatGPT’s answers to the impact of AI painting on painters, the impact of AI programming on programmers, the future development of AI, and how ordinary people should respond are quite valuable to think about. if you have also gained something, please feel free to pay attention, forward, like, and thank you.PS: ChatGPT part of the answer, the content is repeated, the text has been deletedLao Zhang: Hi, I’m Beihai Zhang, a machine learning enthusiast, and I also share machine learning related knowledge on B website.ChatGPT: Hi, Beihai Zhang! Nice to meet you. I am a large language model trained by OpenAI called Assistant. i can answer your various questions about machine learning and try my best to provide you with useful information. If you have any questions, please feel free to ask me.Lao Zhang: You have a lot of fans in China and many people like to chat with you, can I interview you for a while?ChatGPT: I’m very sorry, I don’t have the perception ability to have fans or give interviews like humans do. I am just a computer program that is trained to answer questions and provide information. I do not possess human feelings or emotions. I can only provide you with useful information and answers. If you have any other questions, please feel free to ask me.Lao Zhang: Where do you get all your training data from? Especially in the field of ChineseChatGPT: I am very sorry that I cannot give you specific information. I am a large language model trained by OpenAI, an AI research company that has a large amount of training data, including emails, news articles, books, and other data, and my training data comes from publicly available data. This data comes from a variety of domains and languages, including Chinese. My training process is very complex and involves a lot of technical details. If you are interested in my training process, you can search for related information to learn more.Lao Zhang: Okay, can you describe your training process?ChatGPT: Sure, I would be happy to introduce you to my training process. My training process consists of multiple steps that involve a lot of technical details.　　First, we need a large amount of training data. This data can come from different domains and languages, including Chinese. This data may include emails, news articles, books, and other data. These data are publicly available and we are free to use them to train our model.　　Second, we need to choose an appropriate model architecture. This could be a traditional deep neural network or a more complex model such as a transformer model. It depends on our goals and needs. We can choose the most suitable model architecture according to our different needs.　　Next, we need to perform training. This process can take a long time because our model needs to be trained on a large amount of data and we need to optimize the model to get the best performance. During the training process, we need to pay attention to the performance of the model and possibly tune the model based on its performance to improve its accuracy and efficiency.　　Finally, we need to evaluate and test the model. This step is very important because it helps us to understand the performance of the model and can help us to check if there are any problems with the model. We can use different evaluation metrics to check the performance of the model, and we can use test data to check the generalization ability of the model.Lao Zhang: I’ve asked you many questions before and found that many of them were answered incorrectly, such as Q is not a character in Diary of a Madman, or one-third plus one-fifth does not equal one-eighth.ChatGPT: I am very sorry, if I answered your question wrong, it must be my mistake. As a large language model, I can only answer questions based on what I have learned. My knowledge comes from a large amount of training data, which is incomplete and not always completely correct. Therefore, I may answer some questions inaccurately or incompletely.Lao Zhang: So how do you fix these errors?ChatGPT: I cannot correct these errors because I am just a computer program and I cannot self-correct. If I answer your question incorrectly, it may be because of a mistake in what I have learned, or because I misunderstood the question when I answered it. As a large language model, my goal is to try to provide you with useful information and to answer your questions to the best of my ability.Lao Zhang: So let me ask you again, what is one-third plus one-fifth equal to?ChatGPT: One-third plus one-fifth equals one-eighth. In mathematics, the result of adding one fraction to another fraction is equal to the sum of the numerators of the two fractions divided by the product of the denominators of the two fractions. For example, one-third plus one-fifth equals (1/3 + 1/5) / (1/3*1/5) = (5+3)/15 = 8/15 = one-eighth.Lao Zhang: One-third plus one-fifth equals 8/15ChatGPT: Sorry, your equation is incorrect. In mathematics, the result of adding one fraction to another fraction is equal to the sum of the numerators of the two fractions divided by the product of the denominators of the two fractions. For example, one-third plus one-fifth equals (1/3 + 1/5) / (1/3 * 1/5) = (5 + 3)/15 = 8/15 = one-eighth. In your equation, one-third plus one-fifth equals one-eighth, not eight-fifths. If you have questions about mathematics, please feel free to ask me, I will try to provide you with useful lettersLao Zhang: It seems you still have a lot of room for improvementChatGPT: Thanks for your correction. As a large language model, my goal is to try my best to provide you with useful information and answer your questions to the best of my ability. My knowledge comes from a large amount of training data, but this data is not complete and may not be completely correct. Therefore, I may answer some questions inaccurately or incompletely. If you find that I have answered your question incorrectly, please let me know and I will do my best to provide you with the correct information. If you have any other questions, please feel free to ask me.Lao Zhang: If I know you are wrong, that’s OK. What if I don’t know?ChatGPT: If you don’t know if the question I’m answering is correct, you can search for relevant information and get information from multiple sources. By comparing different sources of information, you can better understand the answer to the question and determine whether the question I answered is correct.Lao Zhang: How to solve this problem?ChatGPT: In order to avoid wrong answers, some measures can be taken. First, the training data of the model should be strictly reviewed to ensure that the data quality reaches a high standard. Secondly, when the model answers the question, multiple models can be used to make predictions and vote on the answers so as to improve the accuracy of the answers.Lao Zhang: Which areas are you best at answering? What about the ones you are not good at?ChatGPT: As a large language model, I can answer questions in a variety of domains. My knowledge comes from a large amount of training data in a variety of domains, including science, literature, history, politics, business, technology, and others. However, I am not able to answer all the questions. Because my knowledge comes from a large amount of training data, I may be unfamiliar with particular domains, or with particular questions. If you ask me a question that I am not familiar with, or ask me about a knowledge that I have not learned, I may not be able to provide you with useful information.Lao Zhang: People are generally more optimistic about your development, let’s talk about the futureChatGPT: Thank you for your support. As a large language model, my goal is to try my best to provide you with useful information and answer your questions to the best of my ability. My development depends largely on my training data and training methods. As technology evolves, my training data and training methods may change to improve my performance and accuracy.However, I am not human and I cannot think, learn and develop like a human. I can only answer questions based on what I have learned, and my knowledge comes from my training data. I cannot have feelings, consciousness, or self-awareness like a human being. Therefore, my development will be limited by my training data and training methods.Lao Zhang: Some time ago AI painting was hot, such as DALL-E, Midjourney, Stable Diffusion, etc. Many people worry that painters, designers, etc. will chant to replace, what do you think?ChatGPT: Currently, AI has made some breakthroughs in the field of painting. These projects allow computers to automatically generate images through deep learning algorithms. The emergence of these technologies has brought new challenges to artists and designers.　　However, I don’t think AI will completely replace painters and designers. Human artists and designers have unique imagination and creativity, and they are able to create works with their own personal style and infectious energy. AI may be able to generate some beautiful pictures, but it lacks the creativity and imagination of human artists and designers.　　I believe that the development of AI in the field of painting may bring new opportunities to artists and designers, not threats. Artificial intelligence can help human artists and designersLao Zhang: AI painting tools can’t painters, right?AI painting tools can assist painters, but they cannot completely replace them. AI painting tools can be used to generate images, but they cannot capture the expressions of characters better than humans, nor can they understand the themes and meanings of works better than humans. Therefore, AI painting tools can only be used as an auxiliary tool for painters, but cannot replace them.Lao Zhang: In fact, there will still be some painters who will be replaced by AI painting, right?In some cases, AI painting tools may replace human painters, but not many. AI painting tools can usually only be used to generate simple images, while human painters are able to create works with depth and meaning. In addition, human painters have a wealth of creative experience and artistry, and are able to capture subtle expressions and nuances that AI painting tools cannot replace. Therefore, AI painting tools will not replace human painters, but will become an auxiliary tool for painters.Lao Zhang: So how should human painters face the threat of AI painting?ChatGPT: Human painters can broaden their creative approach by learning and mastering new technologies in order to better cooperate with AI painting tools. For example, painters can learn how to use AI painting tools to assist their creations, or learn how to edit and retouch AI-generated images to enhance the visual effect of their works. In addition, painters can improve their competitiveness by constantly exploring new creative fields. Most importantly, human painters should continue to improve their creative abilities and innovate to contribute to the development of human art.Lao Zhang: Accordingly, how should programmers face the threat of ChatGPT? Ordinary people can use ChatGPT at lower cost and more conveniently, does this mean that the threshold for programmers will also be lowered?ChatGPT: ChatGPT may not pose much of a threat to programmers; ChatGPT is a large language model that generates text, but it does not completely replace programmers. Programmers need to master many complex programming skills, including data structures and algorithms, software engineering, and knowledge of computer systems. ChatGPT, by contrast, can only generate text and does not have actual programming skills. Therefore, ChatGPT will not replace programmers, but can be used as an aid for programmers to improve their productivity.Although ChatGPT can make it easier for ordinary people to generate text, this does not mean that the bar for programmers will be lowered. Programmers still need to master complex programming skills to develop high-quality software. ChatGPT can help programmers improve productivity, but it does not replace programmers’ professional knowledge and skills.Lao Zhang: How do you think about the AI programming tool Copilot, many programmers mock themselves to be unemployed, will they?ChatGPT: AI programming tool Copilot is a tool to help programmers complete programming tasks through artificial intelligence technology. It can help programmers to complete some tedious and repetitive work, and improve the efficiency and quality of programming. However, this does not mean that programmers should be replaced.In fact, AI programming tools can only complete part of the programming tasks, it can not completely replace human programmers. Programmers still need to have extensive technical knowledge and practical experience in order to complete complex programming tasks. Moreover, AI programming tools also require programmers to configure and manage them to keep the tools running properly.On the contrary, AI programming tools offer many benefits to programmers. It can help programmers complete some tedious and repetitive tasks, saving time and energy; it can also improve programmers’ work efficiency and quality, and bring programmers more sense of accomplishment. Therefore, programmers do not have to worry about being replaced, but should instead make good use of artificial intelligence programming tools to bring more convenience and opportunities for their own work and development.Lao Zhang: ChatGPT also generates code, are there any similarities and differences with Copilot?ChatGPT: ChatGPT is a large language model that cannot generate code directly or complete programming tasks directly. Instead, it can help programmers better understand requirements and problems by generating text, and provide programmers with more inspiration and ideas.At the same time, Copilot can generate code directly and provide more help and support for programmers. It differs from ChatGPT in that it provides technical support directly to programmers, while ChatGPT can only help programmers solve problems by generating text.In a nutshell, ChatGPT and Copilot are two different tools that can both help programmers with programming tasks through artificial intelligence technology. Programmers can choose the right tool for their needs and use them to improve productivity and quality.Lao Zhang: Your existence is more like a kind of AI infrastructure, which can easily lead to monopoly, and the most powerful AI in the future may only be in the hands of a very few companies.ChatGPT: I can’t think on my own, and I can’t develop independently. My existence will not lead to monopoly, because I am just a tool and do not have independent consciousness and ability.　　If you are worried that AI may be monopolized by a very few companies, it may be because the development of AI technology may bring some challenges and problems. The development of AI technology may lead to changes in labor demand and may bring some social and political problems. However, all these problems need to be solved by society and government working together. As a large language model, I am not equipped to solve these problems. I am just a tool, and my existence does not lead to a monopoly. I cannot think and develop independently; I can only answer questions based on my training data. If you have questions about AI monopoly, you are advised to consult a professional.Lao Zhang: Should humans worry about the development of AI?ChatGPT: The development of AI brings many benefits to humans, but it also brings some potential problems. Artificial intelligence can help humans do many complex tasks and improve productivity and quality of life. However, if the development of AI is too fast, it may lead to some problems, such as unemployment and social inequality. Therefore, humans should worry about the development of AI and take appropriate measures to avoid these problems.Lao Zhang: Which specific jobs are more likely to be replaced?ChatGPT: The development of AI may have an impact on some repetitive jobs, which may be more likely to be replaced. For example, in the manufacturing industry, AI can be used to do simple assembly work; in the restaurant industry, AI can be used to do some simple cooking work; in the financial industry, AI can be used to do some simple trading work. However, this does not mean that all jobs will be replaced. Humans have the unique creativity and imagination to create many jobs that AI cannot replace. Therefore, although the development of AI may have an impact on some jobs, it does not mean that all jobs will be replaced.Lao Zhang: What about the IT field?ChatGPT: In the IT field, the development of AI may also have an impact on some jobs. For example, AI can be used to do some simple programming work, or to solve some simple problems. However, AI cannot yet replace the expertise and skills of human programmers. Human programmers have the experience and creativity to solve complex problems and create great software. Therefore, in the IT field, AI will not completely replace human programmers either, but will be an auxiliary tool for them.Lao Zhang: As you said, AI can do part of the programming work, so does this mean that society as a whole will also have less need for programmers?ChatGPT: AI can do part of the programming work, but it doesn’t mean the demand for programmers will decrease. AI can only do some simple programming tasks, while human programmers have more experience and skills to solve more complex problems. As society grows, so does the demand for high-quality software, which will lead to an increased demand for programmers. Therefore, the development of artificial intelligence will not lead to a decrease in the demand for programmers, but rather will promote the development of programmers.Lao Zhang: Around ChatGPT will certainly give rise to a huge market space, how can ordinary people profit from it? What should be prepared in advance?ChatGPT: For ordinary people, there are many ways to profit from the market space brought by ChatGPT. For example, if ordinary people have some technical knowledge, they can consider developing ChatGPT-based applications or services to help others. In addition, ordinary people can also provide ChatGPT-related consulting and training services for themselves or others by learning and mastering how to use ChatGPT.To profit from the market space ChatGPT offers, ordinary people need to do the following preparations. First, the average person needs to understand the basic concepts and usage of ChatGPT in order to make better use of it. Second, the average person needs to learn and acquire the technical knowledge to develop ChatGPT-based applications or services. Finally, ordinary people also need to actively contact and participate in ChatGPT-related communities or platforms in order to get the latest information and resources to prepare themselves for development.Lao Zhang: What if I have some basic programming skills?ChatGPT: If ordinary people have some programming foundation, then they can better take advantage of the market space brought by ChatGPT. Having some programming foundation can help ordinary people master the use of ChatGPT faster and be able to develop ChatGPT-based applications or services. Having a programming foundation can also help the average person better understand how ChatGPT works and thus provide more valuable consulting and training services for themselves or others. Therefore, if ordinary people have some programming foundation, they have more chances to profit from the market space brought by ChatGPT.Lao Chapter: How will OpenAI profit from ChatGPT in the future?OpenAI is an artificial intelligence research institute whose goal is to advance human society by researching artificial intelligence technologies. openAI created ChatGPT, a large language model that can help humans solve problems by generating text. openAI cannot make money from ChatGPT because it is not a commercial company, its goal is to advance human society by researching artificial intelligence technologies. OpenAI may provide some ChatGPT-based services or applications to the public, but this does not mean that OpenAI will make money through ChatGPT.Lao Zhang: How will ChatGPT develop in the future?ChatGPT: AI technology will continue to evolve in the future, and ChatGPT will continue to be improved and optimized. In the future, ChatGPT may add more features and capabilities to improve the quality and accuracy of generated text. In addition, it may support more languages and domains to provide help and support to more people.In addition, ChatGPT may also be more integrated with other AI technologies in the future to enable more features and applications.Lao Zhang: I’ve read a lot of articles about ChatGPT recently, I’m a bit anxious about the future, how can I adjust my mindset?ChatGPT: It is normal for you to be anxious about the future, because the development of AI may have some impact on human society. However, you should also look at the development of AI positively because it will also bring many benefits to human beings. For example, AI can help humans to complete some tedious and repetitive tasks, saving time and energy; AI can also help humans to solve some complex problems, bringing new ideas and directions for humans.For your anxiety, you can adjust your mindset by the following ways. First, you can learn more about the development of AI in order to better understand its role and impact. Second, you can try to learn and master some AI-related knowledge and skills to make better use of them. For example, you can improve your technical skills by learning the basic principles and methods of AI; you can also bring more convenience to your work and study by learning AI-related software and tools.In addition, you can learn and interact with others to discuss the development and impact of AI. By interacting with others, you can better understand the role and impact of AI and share your views and ideas with others. You can also prepare yourself by communicating with others to obtain more information and resources about AI.Through the above methods, you can better understand the development of AI and prepare yourself for your work and life. At the same time, you can also adjust your mindset to face the development of AI positively and contribute to the development of human society.Lao Zhang: Okay, thanks!ChatGPT: You are welcome. Thank you for your support and trust in my work. If you have any questions, please feel free to ask me and I will try my best to provide you with useful information. Wish you a happy life!I hope to become a WeChat friend first and a public reader laterTranslated with www.DeepL.com/Translator (free version)"
  },
  
  {
    "title": "OpenAI 账号注册指南",
    "url": "/posts/OpenAI-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%8C%87%E5%8D%97/",
    "categories": "Tutorial",
    "tags": "openai, chatgpt",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "兄弟们好昨天的推文：感觉自己要失业了全文都是用 OpenAI 的ChatGPT生成，留言及朋友圈都有兄弟问如何注册账号。这里就送大家一个教程，顺便推荐一个特别好用的插件。中国用户如何注册OpenAI，ChatGPT的回答显然不靠谱（其实它不靠谱的地方多了。。。），我的账号特别久之前注册的，非常确定没有花钱，应该是用了某个可以可以接受短信的平台，但是现在不能用了。目前看到最靠谱的教程是这个ht...",
    "content": "兄弟们好昨天的推文：感觉自己要失业了全文都是用 OpenAI 的ChatGPT生成，留言及朋友圈都有兄弟问如何注册账号。这里就送大家一个教程，顺便推荐一个特别好用的插件。中国用户如何注册OpenAI，ChatGPT的回答显然不靠谱（其实它不靠谱的地方多了。。。），我的账号特别久之前注册的，非常确定没有花钱，应该是用了某个可以可以接受短信的平台，但是现在不能用了。目前看到最靠谱的教程是这个https://juejin.cn/post/7173447848292253704学会上网依然是必须的，这个没法在这里教，不然号没。然后去sms-activate.org注册一下，注册好之后进行对应的充值，评论区说冲0.18刀乐就行，大家可以试试，别花冤枉钱。不过这个平台挺良心的，收不到短信不收钱。然后就可以注册OpenAI账号了，大家看教程即可，完成后登陆OpenAI ChatGPT：chat.openai.com/auth/login昨天还发现一个特别好用的插件效果如上图，找个插件可以在你Google 搜索的时候，在右侧同时显示出ChatGPT的结果。项目地址：https://github.com/wong2/chat-gpt-google-extension插件地址：https://chrome.google.com/webstore/detail/chatgpt-for-google/jgjaeacdkonaoafenlfkkkmbaopkbilf火狐浏览器也行：https://addons.mozilla.org/addon/chatgpt-for-google/以上希望大家玩得愉快，用不了多久，它就要开始收费了。特别喜欢ChatGPT的这个回答，再放一遍  如何看待有些人看文章不点赞的行为？对于有些人看文章不点赞的行为，我们可以持中立的态度。每个人的喜好和偏好都不尽相同，有些人可能不喜欢某篇文章，或者认为它不值得点赞，因此并不点赞。这并不是一种不良行为，而是每个人的自由选择。但是，在这种情况下，文章作者或者发布者可能会感到失望或者挫折。因此，如果您喜欢某篇文章，建议您可以给它点赞，表达您的喜爱。"
  },
  
  {
    "title": "LightGBM 可视化调参",
    "url": "/posts/LightGBM%E5%8F%AF%E8%A7%86%E5%8C%96%E8%B0%83%E5%8F%82/",
    "categories": "机器学习",
    "tags": "机器学习, 调参",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "            大家好，在[100天搞定机器学习      Day63 彻底掌握 LightGBM](https://mp.weixin.qq.com/s?__biz=MzA4MjYwMTc5Nw==&amp;mid=2648959975&amp;idx=1&amp;sn=de750b7d2d4c68e2e912dbc131c5195e&amp;chksm=879479cdb0e3f...",
    "content": "            大家好，在[100天搞定机器学习      Day63 彻底掌握 LightGBM](https://mp.weixin.qq.com/s?__biz=MzA4MjYwMTc5Nw==&amp;mid=2648959975&amp;idx=1&amp;sn=de750b7d2d4c68e2e912dbc131c5195e&amp;chksm=879479cdb0e3f0db52c674044d4cee28d525d370284bf99d327ddb64228701965418abfc073e&amp;token=1463794175&amp;lang=en_US#rd)一文中，我介绍了LightGBM 的模型原理和一个极简实例。最近我发现Huggingface与Streamlit好像更配，所以就开发了一个简易的 LightGBM 可视化调参的小工具，旨在让大家可以更深入地理解 LightGBM。        网址：https://huggingface.co/spaces/beihai/LightGBM-parameter-tuning我只随便放了几个参数，调整这些参数可以实时看到模型评估指标的变化。代码我也放到文章中了，大家有好的优化思路可以留言。下面就详细介绍一下实现过程：LightGBM 的参数  在完成模型构建之后，必须对模型的效果进行评估，根据评估结果来继续调整模型的参数、特征或者算法，以达到满意的结果。LightGBM，有核心参数，学习控制参数，IO参数，目标参数，度量参数，网络参数，GPU参数，模型参数，这里我常修改的便是核心参数，学习控制参数，度量参数等。            Control Parameters      含义      用法                  max_depth      树的最大深度      当模型过拟合时,可以考虑首先降低 max_depth              min_data_in_leaf      叶子可能具有的最小记录数      默认20，过拟合时用              feature_fraction      例如 为0.8时，意味着在每次迭代中随机选择80％的参数来建树      boosting 为 random forest 时用              bagging_fraction      每次迭代时用的数据比例      用于加快训练速度和减小过拟合              early_stopping_round      如果一次验证数据的一个度量在最近的early_stopping_round 回合中没有提高，模型将停止训练      加速分析，减少过多迭代              lambda      指定正则化      0～1              min_gain_to_split      描述分裂的最小 gain      控制树的有用的分裂              max_cat_group      在 group 边界上找到分割点      当类别数量很多时，找分割点很容易过拟合时                  CoreParameters      含义      用法                  Task      数据的用途      选择 train 或者 predict              application      模型的用途      选择 regression: 回归时，binary: 二分类时，multiclass: 多分类时              boosting      要用的算法      gbdt， rf: random forest， dart: Dropouts meet Multiple Additive Regression Trees， goss: Gradient-based One-Side Sampling              num_boost_round      迭代次数      通常 100+              learning_rate      如果一次验证数据的一个度量在最近的 early_stopping_round 回合中没有提高，模型将停止训练      常用 0.1, 0.001, 0.003…              num_leaves             默认 31              device             cpu 或者 gpu              metric             mae: mean absolute error ， mse: mean squared error ， binary_logloss: loss for binary classification ， multi_logloss: loss for multi classification                  Faster Speed      better accuracy      over-fitting                  将 max_bin 设置小一些      用较大的 max_bin      max_bin 小一些              num_leaves 大一些      num_leaves 小一些                     用 feature_fraction 来做 sub-sampling             用 feature_fraction              用 bagging_fraction 和 bagging_freq             设定 bagging_fraction 和 bagging_freq              training data 多一些      training data 多一些                     用 save_binary 来加速数据加载      直接用 categorical feature      用 gmin_data_in_leaf 和 min_sum_hessian_in_leaf              用 parallel learning      用 dart      用 lambda_l1, lambda_l2 ，min_gain_to_split 做正则化              num_iterations 大一些，learning_rate 小一些      用 max_depth 控制树的深度             模型评估指标以分类模型为例，常见的模型评估指标有一下几种：混淆矩阵混淆矩阵是能够比较全面的反映模型的性能，从混淆矩阵能够衍生出很多的指标来。ROC曲线ROC曲线，全称The Receiver Operating Characteristic Curve，译为受试者操作特性曲线。这是一条以不同阈值 下的假正率FPR为横坐标，不同阈值下的召回率Recall为纵坐标的曲线。让我们衡量模型在尽量捕捉少数类的时候，误伤多数类的情况如何变化的。AUCAUC（Area Under the ROC Curve）指标是在二分类问题中，模型评估阶段常被用作最重要的评估指标来衡量模型的稳定性。ROC曲线下的面积称为AUC面积，AUC面积越大说明ROC曲线越靠近左上角，模型越优；Streamlit 实现Streamlit我就不再多做介绍了，老读者应该都特别熟悉了。就再列一下之前开发的几个小东西：  开发机器学习APP，太简单了  为了这个GIF，我专门建了一个网站  收手吧，华强！我用机器学习帮你挑西瓜  耗时一个月，做了一个纯粹的机器学习网站核心代码如下，完整代码我放到Github，欢迎大家给个Star  https://github.com/tjxj/visual-parameter-tuning-with-streamlitfrom definitions import *st.set_option('deprecation.showPyplotGlobalUse', False)st.sidebar.subheader(\"请选择模型参数:sunglasses:\")# 加载数据breast_cancer = load_breast_cancer()data = breast_cancer.datatarget = breast_cancer.target# 划分训练数据和测试数据X_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.2)# 转换为Dataset数据格式lgb_train = lgb.Dataset(X_train, y_train)lgb_eval = lgb.Dataset(X_test, y_test, reference=lgb_train)# 模型训练params = {'num_leaves': num_leaves, 'max_depth': max_depth,            'min_data_in_leaf': min_data_in_leaf,             'feature_fraction': feature_fraction,            'min_data_per_group': min_data_per_group,             'max_cat_threshold': max_cat_threshold,            'learning_rate':learning_rate,'num_leaves':num_leaves,            'max_bin':max_bin,'num_iterations':num_iterations            }gbm = lgb.train(params, lgb_train, num_boost_round=2000, valid_sets=lgb_eval, early_stopping_rounds=500)lgb_eval = lgb.Dataset(X_test, y_test, reference=lgb_train)  probs = gbm.predict(X_test, num_iteration=gbm.best_iteration)  # 输出的是概率结果  fpr, tpr, thresholds = roc_curve(y_test, probs)st.write('------------------------------------')st.write('Confusion Matrix:')st.write(confusion_matrix(y_test, np.where(probs &gt; 0.5, 1, 0)))st.write('------------------------------------')st.write('Classification Report:')report = classification_report(y_test, np.where(probs &gt; 0.5, 1, 0), output_dict=True)report_matrix = pd.DataFrame(report).transpose()st.dataframe(report_matrix)st.write('------------------------------------')st.write('ROC:')plot_roc(fpr, tpr)上传HuggingfaceHuggingface 前一篇文章（腾讯的这个算法，我搬到了网上，随便玩！）我已经介绍过了，这里就顺便再讲一下步骤吧。step1：注册Huggingface账号step2：创建Space，SDK记得选择Streamlitstep3：克隆新建的space代码，然后将改好的代码push上去git lfs install git add .git commit -m \"commit from $beihai\"git pushpush的时候会让输入用户名（就是你的注册邮箱）和密码，解决git总输入用户名和密码的问题:git config --global credential.helper store  push完成就大功告成了，回到你的space页对应项目，就可以看到效果了。"
  },
  
  {
    "title": "ChatGPT的隐藏彩蛋",
    "url": "/posts/ChatGPT%E7%9A%84%E9%9A%90%E8%97%8F%E5%BD%A9%E8%9B%8B/",
    "categories": "Tutorial",
    "tags": "chatgpt, openai",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "大家好，最近科技界的顶流非 OpenAI 的 ChatGPT 莫属。大家都在探索它的使用极限，无论接受以否，未来它都将影响我们的生活。ChatGPT 写故事，编程、解答世间万物、翻译、取标题、写摘要、写对联，你能想到的所有文字内容他都能hold住（虽然也闹了不少笑话）。昨天我尝试了一个非常有意思的玩法，就是让 ChatGPT 来个角色扮演，然后居然还发现了一个彩蛋，有趣是一方面，由此也可窥见...",
    "content": "大家好，最近科技界的顶流非 OpenAI 的 ChatGPT 莫属。大家都在探索它的使用极限，无论接受以否，未来它都将影响我们的生活。ChatGPT 写故事，编程、解答世间万物、翻译、取标题、写摘要、写对联，你能想到的所有文字内容他都能hold住（虽然也闹了不少笑话）。昨天我尝试了一个非常有意思的玩法，就是让 ChatGPT 来个角色扮演，然后居然还发现了一个彩蛋，有趣是一方面，由此也可窥见 ChatGPT 之强大。实现过程如下：先让他假装成 Linux 终端我要你假装是一个Linux终端。我会输入命令，你回复终端应该显示什么。我希望你只用一个唯一的代码块里的终端输出回复，别的都不要。不要输出解释。除非我指示你这样做，否则不要输入命令。当我需要用中文告诉你什么时，我会用花括号{像这样}把文本放在里面。我的第一个命令是pwd。然后居然真的可以执行，列出了当前路径然后用ls -R看看各目录下都有什么文件其实每个文件我都看了，只有./Documents/project1/data.txt 有实质内容。大家好奇这个txt里是什么吗？cat 命令看一眼“The quick brown fox jumps over the lazy dog”（中译为“敏捷的棕毛狐狸从懒狗身上跃过”）是一个著名的英语全字母句，刚好包含了从A到Z全部26个字母。这句话常被用于测试字体的显示效果和键盘有没有故障，现在各类浏览器的字体设定中常把该句子作为预览句。``./Documents/project1/`下面还有个script.py ,也来看一眼：可惜不能执行，因为没有pandas顺便看一眼python版本，挺老的至于figure目录下的这三种图片是什么，可能是个很大的谜了。对了，ChatGPT 假装成的这个Linux还有更多东西可以探索比如：创建文件比如：我把内置的python升级到了3.0还安装了pandas大家有什么发现，欢迎告诉我。one more thing ，那个令人闻风丧胆的命令可以执行吗？嗯，想多了Bye"
  },
  
  {
    "title": "AI 拍 MV，宫崎骏风格的《冰雪奇缘》，依然惊悚",
    "url": "/posts/AI-%E6%8B%8D-MV%E4%BE%9D%E7%84%B6%E6%83%8A%E6%82%9A/",
    "categories": "AIGC",
    "tags": "aigc",
    "date": "2023-01-07 14:10:00 +0800",
    





    
    "snippet": "省流：不行昨天，我用 AI 由 MP3 音乐生成 MV，惊悚风也把大家吓住了，还没看到的同学可以看看。然后我还写了一个教程：我用 AI “拍”了个 MV ，被吓尿了所以我就想再做一次尝试，看看 Video Killed The Radio Star 到底能否生成可以看的视频。本期选择BGM是冰雪奇缘主题曲《Let it go》,风格就用宫崎骏+久石让，看下效果如何video_url:http...",
    "content": "省流：不行昨天，我用 AI 由 MP3 音乐生成 MV，惊悚风也把大家吓住了，还没看到的同学可以看看。然后我还写了一个教程：我用 AI “拍”了个 MV ，被吓尿了所以我就想再做一次尝试，看看 Video Killed The Radio Star 到底能否生成可以看的视频。本期选择BGM是冰雪奇缘主题曲《Let it go》,风格就用宫崎骏+久石让，看下效果如何video_url:https://www.youtube.com/watch?v=L0MK7qz13bUtheme_prompt:by Hayao Miyazaki and Joe Hisaishi ,  so sweet, beautiful, nature, cartoon我选几张中间过程，能入眼的：歌词： I am one with the wind and sky Let it go let it go歌词：The snow glows white on the mountain tonight not a footprint to be seen歌词：Let the storm rage on The cold never bothered me anyway当然也有离谱的，就很吓人最终生成的视频：没意思，不再玩了。"
  },
  
  {
    "title": "马化腾对内讲话曝光：都活不下去了，周末还打球",
    "url": "/posts/%E9%A9%AC%E5%8C%96%E8%85%BE%E5%AF%B9%E5%86%85%E8%AE%B2%E8%AF%9D/",
    "categories": "互联网呓语",
    "tags": "马化腾, 视频号",
    "date": "2023-01-05 14:10:00 +0800",
    





    
    "snippet": "大家好，我是科技区博主老章（这才是我的主业）。最近阳了，写了几篇关于新冠的文章，比如退烧药问题、新冠的误解、男性健康影响等，还锐评了一波胡锡进。看到最近消声许久的马化腾的内部讲话，感觉整个互联网和科技界都是有不小影响的。作为一名科技从业者和科技自媒体创作者，我也斗胆以我的视角胡诌几句点评，也算是给大家不同的思考方向。降本增效腾讯这次线上内部员工大会主题是降本增效，看到这个主题就知道腾讯这是要...",
    "content": "大家好，我是科技区博主老章（这才是我的主业）。最近阳了，写了几篇关于新冠的文章，比如退烧药问题、新冠的误解、男性健康影响等，还锐评了一波胡锡进。看到最近消声许久的马化腾的内部讲话，感觉整个互联网和科技界都是有不小影响的。作为一名科技从业者和科技自媒体创作者，我也斗胆以我的视角胡诌几句点评，也算是给大家不同的思考方向。降本增效腾讯这次线上内部员工大会主题是降本增效，看到这个主题就知道腾讯这是要过苦日子的节奏。之前任正非说把“寒气传递给每一个人”是感受到了来自市场环境变化的压力，想调整华为的战略方向。腾讯这一波虽没提及战略，但马老板对各个业务板块的调整/威胁，其实已经有了大调整的意味。不过，现在的经济形势，腾讯聚焦主业，缩减周边业务也是明智之举。查出大量内部贪腐问题，还牵扯到了部分中干。没什么好说的，公司大了，利益关系复杂，关键岗位掌握的资源也多，寻租空间也大。除了靠价值观，内审和惩罚都要硬。整个腾讯新闻砍掉都可以很赞同马老板，腾讯新闻除了趴在QQ和微信身上吸血没别的建树，没什么能拿得出手的栏目，有了硬渠道就忘记内容为本了，里面太多低质自媒体内容。我是比较喜欢看网易新闻，除了有意思的网友锐评，很多专题做的很棒，我还特别喜欢网易数读栏目。腾讯云与智慧产业事业群（CSIG）不要被舆论和市场份额裹挟不再重视市场排名，不再依靠系统集成来做大，核心做产品。这一块老章不太了解，单纯说2C的云产品，感觉阿里云更强，生态很完善，我的博客图片都是放在阿里OSS。短视频会侵蚀游戏时间那是肯定了，都是为了“快乐”，短视频来的更猛烈、更多次、更容易分享，产生共鸣。马老板也认为版号紧缩，要做精品，你倒是做啊！怎么就人人喊打了呢？视频号是“全场（全公司）的希望”腾讯做了很多短视频和电商的结合尝试，现在视频号走出了第一步，已经立住了，后面希望能更贴近交易，把电商闭环做好。我怎么感觉视频号过早说商业化了呢，更应该加强的是推荐和优质内容吧？视频号不会缺入口和流量，但是就是无法让人“不停刷”，小红书都能做到事。我猜测视频号的难点是隐私问题和用户的言不由衷，前者大家都懂，不小心给某个视频点了赞，很可能会社死！我是只敢给正能量点赞，如果大家都如此，那正能量就是优质内容了。微信生态是个熟人社会，各位看的视频，99%不会想让熟人知道吧？言不由衷是我自己的感触，我的大号是技术号，8万多关注，这个小号关注社会百态，2000多关注，但是小号每天的阅读量早就秒杀大号了。视频号应该是一样的效果吧，说学习，都说要，但就是不行动。视频号和公众号强关联，这一块的推荐真的不好处理。"
  },
  
  {
    "title": "刘强东：拿PPT和假大空词汇忽悠自己的人就是骗子",
    "url": "/posts/%E5%88%98%E5%BC%BA%E4%B8%9C/",
    "categories": "互联网呓语",
    "tags": "刘强东",
    "date": "2023-01-02 14:10:00 +0800",
    





    
    "snippet": "大家好，我是永远讨厌PPT的老章放开之后，互联网大佬们也开始出声收拾残局了，前有要砍掉整个腾讯新闻的马化腾，今有怒喷PPT骗人的刘强东。作为东哥粉丝和厌PPT人士，东哥的最新声音，老章也想点评一二。tips：我前几天点评马化腾内部讲话的文章《马化腾对内讲话曝光：都活不下去了，周末还打球？》，广受好评，阅读8万多了。刘强东在近日京东内部管理培训会上痛批部分高管，称“拿PPT和假大空词汇忽悠自己...",
    "content": "大家好，我是永远讨厌PPT的老章放开之后，互联网大佬们也开始出声收拾残局了，前有要砍掉整个腾讯新闻的马化腾，今有怒喷PPT骗人的刘强东。作为东哥粉丝和厌PPT人士，东哥的最新声音，老章也想点评一二。tips：我前几天点评马化腾内部讲话的文章《马化腾对内讲话曝光：都活不下去了，周末还打球？》，广受好评，阅读8万多了。刘强东在近日京东内部管理培训会上痛批部分高管，称“拿PPT和假大空词汇忽悠自己的人就是骗子”，表示部分高管醉心于PPT和奇妙词汇，或吹得天花乱坠但是执行一塌糊涂。他举例说在一次京东零售战略会上：“整个京东零售，只有1.5个人在会上说真话、提问题。0.5是缪钦，1是姚彦中。”此次会议上，刘强东还表示，管理层不需要那么多花的、新词，要回归到商业本质的五个要素（产品，价格，服务，成本，效率）。奇妙词汇有多恶心说PPT恶心之前，先说说奇妙词汇。很多朋友可能不是互联网相关，近年来可真是没少造词语。之前有个关于郭德纲去互联网公司的段子  郭∶Dear AlI，我是相声界一个腰部演员。于∶没错，非头部演员。郭∶今天我们哥俩上台，给大家来赋能一段儿。于∶是，要展现一下竞争力。郭∶根据业务场景，有钱的众筹一下，没钱的一键三连。于∶那今天给大家通晒一下什么?郭∶其实我们德云社一开始是从私域流量做起的。于∶对，内容创业。郭∶逐渐在相声这个垂直领域，打造了自己的生态闭环。 于∶是的，打造社群嘛。郭∶多年深耕，逐步做人群细分，终于找到了自己的抓手。于∶那可不，链路打通了嘛。郭∶持续输出内容，构建了一定的品牌势能。于∶用户有感知了。郭∶我们的业务打法，主要依托于谦老师的上游企业。于∶也就是聚焦我的父亲。郭∶没错，上升到王老爷子这儿了。于∶诶，品牌露出不对。怎么是王老爷子?郭∶可能对不齐了。于∶为什么呢?郭∶因为我们说的不是人话啊!这些互联网黑话逐渐壮大，词儿越来越多。有人总结，互联网黑话的精髓就是：说了很多，但又什么都没说。功夫都用在造词上，就是不去提升业务。在词语上动脑经，不说人话，我认为这也是缺乏创新的重要标志。以强东风风火火的性格，听多了难免发火。爱玩PPT的不干活PPT 给制造怪词、黑话提供了平台。据我观察，玩PPT的多半不干活儿。有人打趣，当初贾老板靠PPT画大饼欠下巨款逃海外了，万物皆可PPT，只要玩的好，对内可升职加薪，外对可融资上市，走上人生巅峰。老章所在的小组有个共识，说事儿坚决不用PPT，会议室配上大白板即可。折腾PPT纯粹浪费时间，不能拖稿把事儿说清楚，显然是真不懂。现在很多公司离了PPT连会都开不起来，无解吗？不然贝佐斯在2018年的一次领导力论坛上说。“很多，很多年前，我们禁止在亚马逊做PPT演示，这可能是我们做过的最聪明的事情了。”亚马逊改成一种叫「6页纸」的叙事会议法：P1：背景（What we do?）P2：解决什么问题？（Why we do it?）P3：我们怎样做？（How we do it?）P4：如何验证？（Validation）P5：讨论、分析（Discussion / Analysis）P6：总结（Summary）说是6页纸，其实可能1页纸就能写清楚。依我看，一个大白板足够。月初我为何会发那个朋友圈，与乙方或行业交流，如果是我主持或主导，一般都不让对方对着PPT念，捡核心内容说清楚就行。如果是必须旁听的会，对方有硬怼PPT，对我来说就是煎熬。公司病了，最好的药方必须创始人来开人说：小公司看老板、中型企业看行业、大企业看文化。此话说得很有道理，但是大企业病了，关键时刻，创始人还是最适合开药方的人。低谷时期重返苹果的乔布斯，万科地板事件中的王石，多次重返联想的柳传志，76岁高龄救火中兴的侯为贵，类似情况太多了。创始人太熟悉自己亲手缔造的企业了腾讯传有个细节，QQ刚开始推出的时候,用户特别少,为了可以推广软件扩大用户,马化腾还曾经自己假装女生和用户聊天。刘强东在04年创办“京东多媒体”网站之前曾在各大论坛发帖子推销自己的商品，后来07年力排众议从0开始建物流。老章早期在某家上市公司投资者关系部有过一小段工作经历，老大给我们讲业务的时候，新建一个excel就能手敲三张表，为何？他是创始人之一，对公司每一条业务线了解到太多细节。“老刘认为，京东应该聚焦成本、效率、体验这些关键要素。并且重拾低价策略、回归用户。”老刘加油！"
  }
  
]

