

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>玩机器学习的章北海</title>
  <subtitle>机器学习算法与Python实战，玩机器学习，但又不止关注机器学习</subtitle>
  <updated>2024-01-07T11:03:01+08:00</updated>
  <author>
    <name>玩机器学习的章北海</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 玩机器学习的章北海 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>机器学习周刊05-看见统计看见概率</title>
    <link href="http://localhost:4000/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%91%A8%E5%88%8A05-%E7%9C%8B%E8%A7%81%E7%BB%9F%E8%AE%A1%E7%9C%8B%E8%A7%81%E6%A6%82%E7%8E%87/" rel="alternate" type="text/html" title="机器学习周刊05-看见统计看见概率" />
    <published>2024-01-07T10:10:00+08:00</published>
  
    <updated>2024-01-07T10:10:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%91%A8%E5%88%8A05-%E7%9C%8B%E8%A7%81%E7%BB%9F%E8%AE%A1%E7%9C%8B%E8%A7%81%E6%A6%82%E7%8E%87/</id>
    <content src="http://localhost:4000/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%91%A8%E5%88%8A05-%E7%9C%8B%E8%A7%81%E7%BB%9F%E8%AE%A1%E7%9C%8B%E8%A7%81%E6%A6%82%E7%8E%87/" />
    <author>
      <name>老章mlpy</name>
    </author>

  
    
    <category term="机器学习周刊" />
    
  

  
    <summary>
      





      

这个网站用可视化的方式讲解概率和统计基础知识，很多内容还是可交互的，非常生动形象。

大家好，欢迎收看第五期机器学习周刊

本期介绍7个内容，涉及Python、概率统计、机器学习、大模型等,目录如下：


  一个离谱的Python库
  看见概率，看见统计
  2024机器学习最强文档
  Gradio
  顶级程序员如何使用LLM
  TinyLlama
  微软宣布利用大型语言模型改进文本嵌入


1、一个离谱的Python库

地址：https://www.visidata.org/docs/


  pip3 install visidata


VisiData是一款免费的开源工具，可让您在计算机终端中快速打开、探索、汇总和分析数据集。VisiData 可处理 CSV 文件、Excel 电子表格、SQL 数据库和许多其他数据源。

界面如下所示：



甚至还能在命令...
    </summary>
  

  </entry>

  
  <entry>
    <title>【翻译】Redis之父最新文章《2024年初的LLMs与编程》</title>
    <link href="http://localhost:4000/posts/2024%E5%B9%B4%E5%88%9D%E7%9A%84LLMs%E4%B8%8E%E7%BC%96%E7%A8%8B/" rel="alternate" type="text/html" title="【翻译】Redis之父最新文章《2024年初的LLMs与编程》" />
    <published>2024-01-03T14:10:00+08:00</published>
  
    <updated>2024-01-03T14:10:00+08:00</updated>
  
    <id>http://localhost:4000/posts/2024%E5%B9%B4%E5%88%9D%E7%9A%84LLMs%E4%B8%8E%E7%BC%96%E7%A8%8B/</id>
    <content src="http://localhost:4000/posts/2024%E5%B9%B4%E5%88%9D%E7%9A%84LLMs%E4%B8%8E%E7%BC%96%E7%A8%8B/" />
    <author>
      <name>老章mlpy</name>
    </author>

  
    
    <category term="翻译" />
    
  

  
    <summary>
      





      英文原文：http://antirez.com/news/140

Redis 之父的最新文章，非常详细地分享他在工作中使用 LLM 编程的体验，我们可以通过此文一窥超级大佬是如何使用大模型的。

这篇文章很我让ChatGPT提取了摘要：


  在2023年，人工智能尤其是可以在设备上本地使用的LLMs取得了显著的进步。作者广泛利用这项技术来加速他的编程能力。
  起初，作者主要使用LLMs来处理文档和避免在编程中的无聊/不感兴趣的部分。然而，随着时间的推移，他学会了何时使用LLMs最有帮助，以及何时它们可能会减慢他的速度。
  LLMs在推理和插值方面的能力有限，它们不能超越它们被训练的内容。虽然它们不能替代人类程序员，但如果适当使用，它们可以是有用的辅助工具。
  作者提供了几个例子，展示了LLMs如何帮助他更快地编写代码，例如在框架之间切换、用一种不熟悉的语言编程，或分析他不...
    </summary>
  

  </entry>

  
  <entry>
    <title>机器学习周刊04-动手实战人工智能</title>
    <link href="http://localhost:4000/posts/%E5%8A%A8%E6%89%8B%E5%AE%9E%E6%88%98%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" rel="alternate" type="text/html" title="机器学习周刊04-动手实战人工智能" />
    <published>2024-01-01T14:10:00+08:00</published>
  
    <updated>2024-01-01T14:10:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E5%8A%A8%E6%89%8B%E5%AE%9E%E6%88%98%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</id>
    <content src="http://localhost:4000/posts/%E5%8A%A8%E6%89%8B%E5%AE%9E%E6%88%98%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" />
    <author>
      <name>老章mlpy</name>
    </author>

  
    
    <category term="机器学习周刊" />
    
  

  
    <summary>
      





      

LLM开发者必读论文：检索增强（RAG）生成技术综述！

目录：


  1、动手实战人工智能 Hands-on Al
  2、huggingface的NLP、深度强化学习、语音课
  3、Awesome Jupyter
  4、计算机科学热门论文
  5、LLM开发者必读论文:检索增强 (RAG) 生成技术综述
  6、Apple 公布了多模态大型语言模型 Ferret
  7、免费的基于ChatGPT API的安卓端语音助手
  8、每日数学
  9、WhisperLive:接近实时的 Whisper 实现
  10、Unsloth：大模型训练速度和效率加速工具
  11、最后推荐三个AI工具


1、动手实战人工智能 Hands-on AI

地址：https://ai.huhuhang.com/intro

这个《动手实战人工智能 Hands-on AI》写的相当不错，作...
    </summary>
  

  </entry>

  
  <entry>
    <title>Python处理电子表格，4个非常流行且功能强大的库</title>
    <link href="http://localhost:4000/posts/Python%E5%A4%84%E7%90%86%E8%A1%A8%E6%A0%BC%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/" rel="alternate" type="text/html" title="Python处理电子表格，4个非常流行且功能强大的库" />
    <published>2024-01-01T14:10:00+08:00</published>
  
    <updated>2024-01-01T14:10:00+08:00</updated>
  
    <id>http://localhost:4000/posts/Python%E5%A4%84%E7%90%86%E8%A1%A8%E6%A0%BC%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/</id>
    <content src="http://localhost:4000/posts/Python%E5%A4%84%E7%90%86%E8%A1%A8%E6%A0%BC%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/" />
    <author>
      <name>老章mlpy</name>
    </author>

  
    
    <category term="Python系列" />
    
  

  
    <summary>
      





      在Python中处理表格数据，有几个非常流行且功能强大的库。以下是一些最常用的库及其示例代码：

1. Pandas

Pandas是一个开放源代码的、BSD许可的库，为Python编程语言提供高性能、易于使用的数据结构和数据分析工具。

安装Pandas

pip install pandas


示例代码：读取CSV文件

import pandas as pd

# 读取CSV文件
df = pd.read_csv('pokemon.csv')

# 显示前五行数据
print(df.head())

# 计算某列的平均值
print("Average of column:", df['Speed'].mean())

# 数据筛选
filtered_df = df[df['Speed'] &amp;gt; 10]

# 将更改后的DataFrame保存到新的CSV文件
filtere...
    </summary>
  

  </entry>

  
  <entry>
    <title>Python处理word文档，相关的库</title>
    <link href="http://localhost:4000/posts/Python%E5%A4%84%E7%90%86word%E6%96%87%E6%A1%A3-%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/" rel="alternate" type="text/html" title="Python处理word文档，相关的库" />
    <published>2024-01-01T14:10:00+08:00</published>
  
    <updated>2024-01-01T14:10:00+08:00</updated>
  
    <id>http://localhost:4000/posts/Python%E5%A4%84%E7%90%86word%E6%96%87%E6%A1%A3-%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/</id>
    <content src="http://localhost:4000/posts/Python%E5%A4%84%E7%90%86word%E6%96%87%E6%A1%A3-%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93/" />
    <author>
      <name>老章mlpy</name>
    </author>

  
    
    <category term="Python系列" />
    
  

  
    <summary>
      





      当然，Python社区提供了多个库来处理Word文档，主要用于创建、修改和读取Word文件。以下是一些常用的库：


  python-docx：用于创建和修改.docx文件。
  docx2txt：将.docx文件转换成纯文本。
  pywin32 (仅限Windows)：通过Microsoft Word应用程序接口与Word文档交互。


python-docx

python-docx 是一个创建和更新Microsoft Word (.docx)文件的Python库。这里有一个简单的例子，展示如何使用 python-docx 创建一个包含一段文本的Word文档：

from docx import Document

# 创建一个Word文档对象
doc = Document()

# 向文档添加一个段落
doc.add_paragraph('Hello, this is a ...
    </summary>
  

  </entry>

</feed>


